{"version":3,"file":"856.jahia.806183.js","mappings":"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","sources":["webpack://contentReportReact/./src/javascript/AdminPanel/reports/ReportResultsTable.module.scss?f0bf","webpack://contentReportReact/./src/javascript/AdminPanel/AdminPanel.module.scss?05d9","webpack://contentReportReact/./src/javascript/AdminPanel/AdminPanel.constants.js","webpack://contentReportReact/./src/javascript/AdminPanel/reports/ByAuthorAndDate.jsx","webpack://contentReportReact/./src/javascript/graphql/queries.js","webpack://contentReportReact/./src/javascript/AdminPanel/reports/ReportResultsTable.jsx","webpack://contentReportReact/./src/javascript/AdminPanel/AdminPanel.jsx","webpack://contentReportReact/./src/javascript/AdminPanel/AdminPanel.routes.jsx","webpack://contentReportReact/./src/javascript/AdminPanel.register.js","webpack://contentReportReact/./src/javascript/init.js","webpack://contentReportReact/./src/javascript/AdminPanel/AdminPanel.module.scss","webpack://contentReportReact/./src/javascript/styles/global.module.scss","webpack://contentReportReact/./src/javascript/AdminPanel/reports/ReportResultsTable.module.scss","webpack://contentReportReact/./src/javascript/styles/global.module.scss?7d96"],"sourcesContent":["var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../node_modules/sass-loader/dist/cjs.js!./ReportResultsTable.module.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../node_modules/sass-loader/dist/cjs.js!./AdminPanel.module.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","const DEFAULT_ROUTE = '/contentReportReact';\n\nconst PATH_DEFAULT = ({siteKey}) => (siteKey ? `/sites/${siteKey}` : '');\n\nconst reportCategories = [\n    {id: 'overview', labelKey: 'categories.overview'},\n    {id: 'content', labelKey: 'categories.content'},\n    {id: 'languages', labelKey: 'categories.languages'},\n    {id: 'visibility', labelKey: 'categories.visibility'},\n    {id: 'metadata', labelKey: 'categories.metadata'},\n    {id: 'system', labelKey: 'categories.system'}\n];\n\nconst typeSearchOptions = [\n    {value: 'pages', labelKey: 'fields.typeSearch.pages'},\n    {value: 'content', labelKey: 'fields.typeSearch.content'}\n];\n\nconst typeAuthorOptions = [\n    {value: 'created', labelKey: 'fields.typeAuthor.created'},\n    {value: 'modified', labelKey: 'fields.typeAuthor.modified'}\n];\n\nconst typeDateOptions = [\n    {value: 'created', labelKey: 'fields.typeDateSearch.created'},\n    {value: 'modified', labelKey: 'fields.typeDateSearch.modified'}\n];\n\nconst reports = [\n    {\n        id: 'overview',\n        labelKey: 'menu.overview',\n        descriptionKey: 'descriptions.overview',\n        type: 'overview',\n        category: 'overview',\n        fields: []\n    },\n    {\n        id: '20',\n        labelKey: 'menu.byAuthorAndDate',\n        descriptionKey: 'descriptions.byAuthorAndDate',\n        type: 'legacy',\n        component: 'ByAuthorAndDate',\n        category: 'content',\n        fields: [\n            // Position 1: Path (required, always sent)\n            {name: 'pathTxt', type: 'path', labelKey: 'fields.path', defaultValue: PATH_DEFAULT, required: true, includeIfEmpty: true},\n            // Position 2: Author search checkbox\n            {name: 'searchAuthor', type: 'checkbox', labelKey: 'fields.searchByAuthor', defaultValue: false, includeIfEmpty: true},\n            // Position 3: Username to filter (only when searchAuthor=true)\n            {\n                name: 'searchUsername',\n                type: 'text',\n                labelKey: 'fields.username',\n                placeholderKey: 'fields.username',\n                dependsOn: 'searchAuthor',\n                dependsValue: true,\n                includeIfEmpty: true\n            },\n            // Position 4: Date search checkbox\n            {name: 'searchByDate', type: 'checkbox', labelKey: 'fields.searchByDate', defaultValue: true, includeIfEmpty: true},\n            // Position 5: Date begin (only when searchByDate=true)\n            {name: 'dateBegin', type: 'date', labelKey: 'fields.dateBegin', dependsOn: 'searchByDate', dependsValue: true, includeIfEmpty: true},\n            // Position 6: Date end (only when searchByDate=true) - CRITICAL: Must be within first 6, will need GraphQL extension\n            {name: 'dateEnd', type: 'date', labelKey: 'fields.dateEnd', dependsOn: 'searchByDate', dependsValue: true, includeIfEmpty: true},\n            // UI-only fields (not sent to backend, defaults hardcoded in Java)\n            {name: 'typeSearch', type: 'radio', labelKey: 'fields.typeSearch.label', options: typeSearchOptions, defaultValue: 'pages', uiOnly: true},\n            {\n                name: 'typeDateSearch',\n                type: 'radio',\n                labelKey: 'fields.typeDateSearch.label',\n                options: typeDateOptions,\n                defaultValue: 'created',\n                dependsOn: 'searchByDate',\n                dependsValue: true,\n                uiOnly: true\n            },\n            {\n                name: 'typeAuthorSearch',\n                type: 'radio',\n                labelKey: 'fields.typeAuthorSearch',\n                options: typeAuthorOptions,\n                defaultValue: 'created',\n                dependsOn: 'searchAuthor',\n                dependsValue: true,\n                uiOnly: true\n            },\n            {name: 'typeAuthor', type: 'radio', labelKey: 'fields.typeAuthor.label', options: typeAuthorOptions, defaultValue: 'created', uiOnly: true}\n        ],\n        columns: [\n            {key: 'title', labelKey: 'reports.byAuthorAndDate.columns.title', sortable: true},\n            {key: 'path', labelKey: 'reports.byAuthorAndDate.columns.path', sortable: true},\n            {key: 'type', labelKey: 'reports.byAuthorAndDate.columns.type', sortable: true},\n            {key: 'created', labelKey: 'reports.byAuthorAndDate.columns.created', sortable: true, type: 'date'},\n            {key: 'modified', labelKey: 'reports.byAuthorAndDate.columns.modified', sortable: true, type: 'date'},\n            {key: 'published', labelKey: 'reports.byAuthorAndDate.columns.published', sortable: true, type: 'boolean'},\n            {key: 'locked', labelKey: 'reports.byAuthorAndDate.columns.locked', sortable: true, type: 'boolean'}\n        ]\n    },\n    {\n        id: '1',\n        labelKey: 'menu.byAuthor',\n        descriptionKey: 'descriptions.byAuthor',\n        type: 'legacy',\n        fields: [\n            {name: 'typeSearch', type: 'radio', labelKey: 'fields.typeSearch.label', options: typeSearchOptions, defaultValue: 'pages'},\n            {name: 'typeAuthor', type: 'radio', labelKey: 'fields.typeAuthor.label', options: typeAuthorOptions, defaultValue: 'created'},\n            {name: 'pathTxt', type: 'path', labelKey: 'fields.path', defaultValue: PATH_DEFAULT, required: true}\n        ]\n    },\n    {\n        id: '2',\n        labelKey: 'menu.byAllDate',\n        descriptionKey: 'descriptions.byAllDate',\n        type: 'legacy',\n        fields: [\n            {name: 'typeAuthor', type: 'radio', labelKey: 'fields.typeAuthor.label', options: typeAuthorOptions, defaultValue: 'created'},\n            {name: 'pathTxt', type: 'path', labelKey: 'fields.path', defaultValue: PATH_DEFAULT, required: true}\n        ]\n    },\n    {\n        id: '3',\n        labelKey: 'menu.beforeDate',\n        type: 'legacy',\n        fields: [\n            {name: 'pathTxt', type: 'path', labelKey: 'fields.path', defaultValue: PATH_DEFAULT, required: true},\n            {name: 'date', type: 'date', labelKey: 'fields.date', required: true, includeIfEmpty: false}\n        ]\n    },\n    {\n        id: '4',\n        labelKey: 'menu.byType',\n        type: 'legacy',\n        fields: [\n            {name: 'pathTxt', type: 'path', labelKey: 'fields.path', defaultValue: PATH_DEFAULT, required: true}\n        ]\n    },\n    {\n        id: '5',\n        labelKey: 'menu.byTypeDetailed',\n        type: 'legacy',\n        fields: [\n            {name: 'pathTxt', type: 'path', labelKey: 'fields.path', defaultValue: PATH_DEFAULT, required: true}\n        ]\n    },\n    {\n        id: '6',\n        labelKey: 'menu.byStatus',\n        type: 'legacy',\n        fields: [\n            {name: 'pathTxt', type: 'path', labelKey: 'fields.path', defaultValue: PATH_DEFAULT, required: true}\n        ]\n    },\n    {\n        id: '7',\n        labelKey: 'menu.byLanguage',\n        type: 'legacy',\n        fields: []\n    },\n    {\n        id: '8',\n        labelKey: 'menu.byLanguageDetailed',\n        type: 'legacy',\n        fields: [\n            {name: 'reqLang', type: 'text', labelKey: 'fields.language', defaultValue: ({language}) => language || ''}\n        ]\n    },\n    {\n        id: '23',\n        labelKey: 'menu.references',\n        descriptionKey: 'descriptions.references',\n        type: 'legacy',\n        category: 'content',\n        fields: [\n            {name: 'pathTxtOrigin', type: 'path', labelKey: 'fields.originPath', defaultValue: PATH_DEFAULT, required: true},\n            {name: 'pathTxtDestination', type: 'path', labelKey: 'fields.destinationPath', defaultValue: PATH_DEFAULT, required: true}\n        ],\n        columns: [\n            {key: 'type', labelKey: 'reports.references.columns.type', sortable: true},\n            {key: 'referencedPath', labelKey: 'reports.references.columns.referencedPath', sortable: true},\n            {key: 'referencePath', labelKey: 'reports.references.columns.referencePath', sortable: true},\n            {key: 'lastModified', labelKey: 'reports.references.columns.lastModified', sortable: true, type: 'date'},\n            {key: 'link', labelKey: 'reports.references.columns.link', sortable: false, type: 'link'}\n        ]\n    },\n    {\n        id: '22',\n        labelKey: 'menu.wipContent',\n        descriptionKey: 'descriptions.wipContent',\n        type: 'legacy',\n        category: 'content',\n        fields: [\n            {name: 'typeSearch', type: 'radio', labelKey: 'fields.typeSearch.label', options: typeSearchOptions, defaultValue: 'pages'},\n            {name: 'pathTxt', type: 'path', labelKey: 'fields.path', defaultValue: PATH_DEFAULT, required: true}\n        ],\n        columns: [\n            {key: 'title', labelKey: 'reports.wipContent.columns.title', sortable: true},\n            {key: 'type', labelKey: 'reports.wipContent.columns.type', sortable: true},\n            {key: 'wipStatus', labelKey: 'reports.wipContent.columns.wipStatus', sortable: true},\n            {key: 'path', labelKey: 'reports.wipContent.columns.path', sortable: true},\n            {key: 'page', labelKey: 'reports.wipContent.columns.page', sortable: true, type: 'link'}\n        ]\n    },\n    {\n        id: '16',\n        labelKey: 'menu.contentWaitingPublication',\n        descriptionKey: 'descriptions.contentWaitingPublication',\n        type: 'legacy',\n        category: 'content',\n        fields: [],\n        columns: [\n            {key: 'title', labelKey: 'reports.contentWaitingPublication.columns.title', sortable: true},\n            {key: 'type', labelKey: 'reports.contentWaitingPublication.columns.type', sortable: true},\n            {key: 'path', labelKey: 'reports.contentWaitingPublication.columns.path', sortable: true},\n            {key: 'workflowStarted', labelKey: 'reports.contentWaitingPublication.columns.workflowStarted', sortable: true, type: 'date'},\n            {key: 'workflowName', labelKey: 'reports.contentWaitingPublication.columns.workflowName', sortable: true},\n            {key: 'workflowType', labelKey: 'reports.contentWaitingPublication.columns.workflowType', sortable: true}\n        ]\n    },\n    {\n        id: '24',\n        labelKey: 'menu.markedForDeletion',\n        type: 'legacy',\n        category: 'content',\n        descriptionKey: 'descriptions.markedForDeletion',\n        fields: [\n            {name: 'pathTxt', type: 'path', labelKey: 'fields.path', defaultValue: PATH_DEFAULT, required: true},\n            {name: 'typeSearch', type: 'radio', labelKey: 'fields.typeSearch.label', options: typeSearchOptions, defaultValue: 'pages'}\n        ],\n        columns: [\n            {key: 'nodeDisplayableName', labelKey: 'reports.markedForDeletion.columns.title', sortable: true},\n            {key: 'nodeType', labelKey: 'reports.markedForDeletion.columns.type', sortable: true},\n            {key: 'nodePath', labelKey: 'reports.markedForDeletion.columns.path', sortable: true},\n            {key: 'nodeUsedInPagePath', labelKey: 'reports.markedForDeletion.columns.page', sortable: true, type: 'link'},\n            {key: 'subNodesMarkedForDeletion', labelKey: 'reports.markedForDeletion.columns.subNodesDeleted', sortable: true},\n            {key: 'publishStatus', labelKey: 'reports.markedForDeletion.columns.published', sortable: true}\n        ]\n    },\n    {\n        id: '10',\n        labelKey: 'menu.pagesWithoutTitle',\n        type: 'i18n',\n        category: 'languages',\n        descriptionKey: 'descriptions.pagesWithoutTitle',\n        fields: []\n    },\n    {\n        id: '21',\n        labelKey: 'menu.pagesUntranslated',\n        type: 'legacy',\n        category: 'languages',\n        descriptionKey: 'descriptions.pagesUntranslated',\n        fields: [\n            {name: 'selectLanguageBU', type: 'languageSelect', labelKey: 'fields.language', defaultValue: ({language}) => language || '', required: true},\n            {name: 'selectTypeSearch', type: 'radio', labelKey: 'fields.typeSearch.label', options: typeSearchOptions, defaultValue: 'pages'},\n            {name: 'pathTxt', type: 'path', labelKey: 'fields.path', defaultValue: PATH_DEFAULT, required: true}\n        ],\n        columns: [\n            {key: 'title', labelKey: 'reports.pagesUntranslated.columns.title', sortable: true},\n            {key: 'type', labelKey: 'reports.pagesUntranslated.columns.type', sortable: true},\n            {key: 'path', labelKey: 'reports.pagesUntranslated.columns.path', sortable: true, type: 'link'},\n            {key: 'date', labelKey: 'reports.pagesUntranslated.columns.date', sortable: true, type: 'date'}\n        ]\n    },\n    {\n        id: '25',\n        labelKey: 'menu.liveContents',\n        type: 'legacy',\n        category: 'visibility',\n        descriptionKey: 'descriptions.liveContents',\n        fields: [\n            {name: 'searchPath', type: 'path', labelKey: 'fields.searchPath', defaultValue: PATH_DEFAULT, required: true}\n        ],\n        columns: [\n            {key: 'name', labelKey: 'reports.liveContents.columns.name', sortable: true},\n            {key: 'path', labelKey: 'reports.liveContents.columns.path', sortable: true, type: 'link'},\n            {key: 'type', labelKey: 'reports.liveContents.columns.type', sortable: true, type: 'html'},\n            {key: 'listOfConditions', labelKey: 'reports.liveContents.columns.listOfConditions', sortable: true, type: 'html', noWrap: false},\n            {key: 'isConditionMatched', labelKey: 'reports.liveContents.columns.isConditionMatched', sortable: true},\n            {key: 'currentStatus', labelKey: 'reports.liveContents.columns.currentStatus', sortable: true}\n        ]\n    },\n    {\n        id: '26',\n        labelKey: 'menu.expiredContents',\n        type: 'legacy',\n        category: 'visibility',\n        descriptionKey: 'descriptions.expiredContents',\n        fields: [\n            {name: 'searchPath', type: 'path', labelKey: 'fields.searchPath', defaultValue: PATH_DEFAULT, required: true}\n        ],\n        columns: [\n            {key: 'name', labelKey: 'reports.expiredContents.columns.name', sortable: true},\n            {key: 'path', labelKey: 'reports.expiredContents.columns.path', sortable: true, type: 'link'},\n            {key: 'type', labelKey: 'reports.expiredContents.columns.type', sortable: true, type: 'html'},\n            {key: 'expiresOn', labelKey: 'reports.expiredContents.columns.expiresOn', sortable: true, type: 'date'}\n        ]\n    },\n    {\n        id: '27',\n        labelKey: 'menu.futureContents',\n        type: 'legacy',\n        category: 'visibility',\n        descriptionKey: 'descriptions.futureContents',\n        fields: [\n            {name: 'searchPath', type: 'path', labelKey: 'fields.searchPath', defaultValue: PATH_DEFAULT, required: true}\n        ],\n        columns: [\n            {key: 'name', labelKey: 'reports.futureContents.columns.name', sortable: true},\n            {key: 'path', labelKey: 'reports.futureContents.columns.path', sortable: true, type: 'link'},\n            {key: 'type', labelKey: 'reports.futureContents.columns.type', sortable: true, type: 'html'},\n            {key: 'liveDate', labelKey: 'reports.futureContents.columns.liveDate', sortable: true, type: 'date'}\n        ]\n    },\n    {\n        id: '11',\n        labelKey: 'menu.pagesWithoutKeywords',\n        type: 'legacy',\n        category: 'metadata',\n        descriptionKey: 'descriptions.pagesWithoutKeywords',\n        fields: [],\n        columns: [\n            {key: 'nodeTitle', labelKey: 'reports.pagesWithoutKeywords.columns.title', sortable: true},\n            {key: 'nodePath', labelKey: 'reports.pagesWithoutKeywords.columns.pagePath', sortable: true, type: 'link'}\n        ]\n    },\n    {\n        id: '12',\n        labelKey: 'menu.pagesWithoutDescription',\n        type: 'i18n',\n        category: 'metadata',\n        descriptionKey: 'descriptions.pagesWithoutDescription',\n        fields: [],\n        columns: [\n            {key: 'path', labelKey: 'reports.pagesWithoutDescription.columns.path', sortable: true, type: 'link'}\n        ]\n    },\n    {\n        id: '15',\n        labelKey: 'menu.lockedContent',\n        type: 'legacy',\n        category: 'system',\n        descriptionKey: 'descriptions.lockedContent',\n        fields: [],\n        columns: [\n            {key: 'nodeName', labelKey: 'reports.lockedContent.columns.title', sortable: true},\n            {key: 'nodeType', labelKey: 'reports.lockedContent.columns.type', sortable: true, type: 'html'},\n            {key: 'nodeAuthor', labelKey: 'reports.lockedContent.columns.author', sortable: true},\n            {key: 'nodeLockedBy', labelKey: 'reports.lockedContent.columns.lockedBy', sortable: true},\n            {key: 'nodeUsedInPagePath', labelKey: 'reports.lockedContent.columns.path', sortable: true, type: 'link'}\n        ]\n    },\n    {\n        id: '18',\n        labelKey: 'menu.customCacheContent',\n        type: 'legacy',\n        category: 'system',\n        descriptionKey: 'descriptions.customCacheContent',\n        fields: [],\n        columns: [\n            {key: 'nodeName', labelKey: 'reports.customCacheContent.columns.title', sortable: true},\n            {key: 'nodeType', labelKey: 'reports.customCacheContent.columns.type', sortable: true, type: 'html'},\n            {key: 'expiration', labelKey: 'reports.customCacheContent.columns.expiration', sortable: true},\n            {key: 'nodeUsedInPagePath', labelKey: 'reports.customCacheContent.columns.path', sortable: true, type: 'link'}\n        ]\n    },\n    {\n        id: '19',\n        labelKey: 'menu.aclInheritanceBreak',\n        type: 'legacy',\n        category: 'system',\n        descriptionKey: 'descriptions.aclInheritanceBreak',\n        fields: [],\n        columns: [\n            {key: 'nodeName', labelKey: 'reports.aclInheritanceBreak.columns.title', sortable: true},\n            {key: 'nodePath', labelKey: 'reports.aclInheritanceBreak.columns.path', sortable: true, type: 'link'}\n        ]\n    }\n];\n\nexport const buildReportsConfig = () => reports.map(report => ({\n    ...report,\n    pathDefault: PATH_DEFAULT\n}));\n\nexport {DEFAULT_ROUTE, reportCategories};\n","import React, {useCallback, useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport {Button, Checkbox, Input, Paper, Typography} from '@jahia/moonstone';\nimport axios from 'axios';\nimport {GET_ALL_USERS_QUERY} from '../../graphql/queries';\nimport globalStyles from '../../styles/global.module.scss';\n\n// Simple Fieldset wrapper component\nconst Fieldset = ({label, id, children, style}) => (\n    <div className={globalStyles.fieldGroup} id={id} style={style}>\n        {label && (\n            <Typography variant=\"body\" weight=\"bold\" component=\"label\" htmlFor={id} style={{fontSize: '14px', marginBottom: '6px', display: 'block', color: '#12264d'}}>\n                {label}\n            </Typography>\n        )}\n        {children}\n    </div>\n);\n\nFieldset.propTypes = {\n    children: PropTypes.node,\n    id: PropTypes.string,\n    label: PropTypes.string,\n    style: PropTypes.object\n};\n\nconst ByAuthorAndDate = ({definitions, fields, onFieldChange, onOpenPathPicker, t, baseContentPath}) => {\n    const [users, setUsers] = useState([]);\n    const [loadingUsers, setLoadingUsers] = useState(false);\n\n    const getDefinition = useCallback(name => (definitions || []).find(field => field.name === name), [definitions]);\n\n    const typeSearchField = getDefinition('typeSearch');\n    const typeDateField = getDefinition('typeDateSearch');\n    const typeAuthorSearchField = getDefinition('typeAuthorSearch');\n\n    // Fetch users from GraphQL\n    useEffect(() => {\n        const fetchUsers = async () => {\n            setLoadingUsers(true);\n            try {\n                const response = await axios.post(\n                    `${window.contextJsParameters.contextPath}/modules/graphql`,\n                    {query: GET_ALL_USERS_QUERY},\n                    {\n                        headers: {\n                            'Content-Type': 'application/json'\n                        }\n                    }\n                );\n\n                if (response.data?.data?.jcr?.nodesByQuery?.nodes) {\n                    const rawUsers = response.data.data.jcr.nodesByQuery.nodes;\n                    // Transform to expected format: {username, email}\n                    const userList = rawUsers.map(user => ({\n                        username: user.name,\n                        email: user.property?.value || ''\n                    }));\n                    setUsers(userList);\n                }\n            } catch (error) {\n                console.error('Error fetching users:', error);\n            } finally {\n                setLoadingUsers(false);\n            }\n        };\n\n        fetchUsers();\n    }, []);\n\n    const renderRadioList = (name, options, groupName) => {\n        const optionList = options || [];\n\n        return (\n            <div className={globalStyles.radioGroup}>\n                {optionList.map(option => (\n                    <label key={`${groupName || name}-${option.value}`} className={globalStyles.radioOption}>\n                        <input\n                            type=\"radio\"\n                            name={groupName || name}\n                            value={option.value}\n                            checked={fields[name] === option.value}\n                            onChange={event => onFieldChange(name, event.target.value)}\n                        />\n                        <span>{t(option.labelKey)}</span>\n                    </label>\n                ))}\n            </div>\n        );\n    };\n\n    return (\n        <Paper hasPadding className={globalStyles.sectionCard}>\n            <div style={{paddingBottom: '16px', borderBottom: '1px solid #e8ecf0', marginBottom: '24px'}}>\n                <Typography variant=\"heading\" weight=\"bold\" style={{fontSize: '18px', color: '#1a2332', marginBottom: '6px'}}>\n                    {t('menu.byAuthorAndDate')}\n                </Typography>\n                {t('descriptions.byAuthorAndDate') && (\n                    <Typography variant=\"body\" style={{color: '#5c6f90', fontSize: '14px'}}>\n                        {t('descriptions.byAuthorAndDate')}\n                    </Typography>\n                )}\n            </div>\n\n            {typeSearchField && (\n                <Fieldset label={t(typeSearchField.labelKey)} id=\"report20-type-search\" style={{marginBottom: '24px'}}>\n                    <div className={globalStyles.fieldGroup}>\n                        {renderRadioList('typeSearch', typeSearchField.options, 'report20-typeSearch')}\n                    </div>\n                </Fieldset>\n            )}\n\n            <Fieldset label={t('fields.path')} id=\"report20-path\" style={{marginBottom: '24px'}}>\n                <div className={globalStyles.pathRow}>\n                    <Input\n                        value={fields.pathTxt || baseContentPath || ''}\n                        className={globalStyles.growInput}\n                        size=\"big\"\n                        onChange={event => onFieldChange('pathTxt', event.target.value)}\n                    />\n                    <Button\n                        size=\"big\"\n                        variant=\"outlined\"\n                        label={t('actions.browse')}\n                        onClick={() => onOpenPathPicker('pathTxt', fields.pathTxt || baseContentPath)}\n                    />\n                </div>\n                <Typography variant=\"caption\" className={globalStyles.helperText}>\n                    {baseContentPath}\n                </Typography>\n            </Fieldset>\n\n            <Fieldset label={t('fields.dateRange')} id=\"report20-date-range\" style={{marginBottom: '24px'}}>\n                <div className={globalStyles.fieldGroup}>\n                    <label className={globalStyles.checkboxRow}>\n                        <Checkbox\n                            checked={Boolean(fields.searchByDate)}\n                            value=\"searchByDate\"\n                            onChange={(event, value, checked) => onFieldChange('searchByDate', checked)}\n                        />\n                        <span>{t('fields.searchByDate')}</span>\n                    </label>\n\n                    {Boolean(fields.searchByDate) && (\n                        <>\n                            {typeDateField && (\n                                <div style={{marginTop: '12px'}}>\n                                    {renderRadioList('typeDateSearch', typeDateField.options, 'report20-typeDateSearch')}\n                                </div>\n                            )}\n                            <div className={globalStyles.inlineFields} style={{marginTop: '12px'}}>\n                                <div className={globalStyles.fieldGroup} style={{flex: 1}}>\n                                    <Typography variant=\"caption\" weight=\"semiBold\" style={{fontSize: '13px', marginBottom: '4px', display: 'block'}}>\n                                        {t('fields.dateBegin')}\n                                    </Typography>\n                                    <Input\n                                        type=\"date\"\n                                        value={fields.dateBegin || ''}\n                                        style={{width: '100%'}}\n                                        size=\"big\"\n                                        onChange={event => onFieldChange('dateBegin', event.target.value)}\n                                    />\n                                </div>\n                                <div className={globalStyles.fieldGroup} style={{flex: 1}}>\n                                    <Typography variant=\"caption\" weight=\"semiBold\" style={{fontSize: '13px', marginBottom: '4px', display: 'block'}}>\n                                        {t('fields.dateEnd')}\n                                    </Typography>\n                                    <Input\n                                        type=\"date\"\n                                        value={fields.dateEnd || ''}\n                                        style={{width: '100%'}}\n                                        size=\"big\"\n                                        onChange={event => onFieldChange('dateEnd', event.target.value)}\n                                    />\n                                </div>\n                            </div>\n                        </>\n                    )}\n                </div>\n            </Fieldset>\n\n            <Fieldset label={t('fields.authorFilters')} id=\"report20-author-filters\">\n                <div className={globalStyles.fieldGroup}>\n                    <label className={globalStyles.checkboxRow}>\n                        <Checkbox\n                            checked={Boolean(fields.searchAuthor)}\n                            value=\"searchAuthor\"\n                            onChange={(event, value, checked) => onFieldChange('searchAuthor', checked)}\n                        />\n                        <span>{t('fields.searchByAuthor')}</span>\n                    </label>\n\n                    {Boolean(fields.searchAuthor) && (\n                        <>\n                            {typeAuthorSearchField && (\n                                <div style={{marginTop: '12px'}}>\n                                    {renderRadioList('typeAuthorSearch', typeAuthorSearchField.options, 'report20-typeAuthorSearch')}\n                                </div>\n                            )}\n                            <div className={globalStyles.fieldGroup} style={{marginTop: '12px'}}>\n                                <Typography variant=\"caption\" weight=\"semiBold\" style={{fontSize: '13px', marginBottom: '4px', display: 'block'}}>\n                                    {t('fields.username')}\n                                </Typography>\n                                <select\n                                    value={fields.searchUsername || ''}\n                                    disabled={loadingUsers}\n                                    style={{\n                                        width: '100%',\n                                        height: '40px',\n                                        padding: '8px 12px',\n                                        fontSize: '14px',\n                                        border: '1px solid #d0d7e5',\n                                        borderRadius: '4px',\n                                        backgroundColor: loadingUsers ? '#f5f7fa' : '#ffffff',\n                                        cursor: loadingUsers ? 'not-allowed' : 'pointer',\n                                        color: '#2c3e5d'\n                                    }}\n                                    onChange={event => onFieldChange('searchUsername', event.target.value)}\n                                >\n                                    <option value=\"\">\n                                        {loadingUsers ? t('common.loading') || 'Loading...' : t('fields.selectUser') || 'Select a user...'}\n                                    </option>\n                                    {users.map(user => (\n                                        <option key={user.username} value={user.username}>\n                                            {user.username} {user.email ? `(${user.email})` : ''}\n                                        </option>\n                                    ))}\n                                </select>\n                            </div>\n                        </>\n                    )}\n                </div>\n            </Fieldset>\n        </Paper>\n    );\n};\n\nByAuthorAndDate.propTypes = {\n    baseContentPath: PropTypes.string,\n    definitions: PropTypes.array,\n    fields: PropTypes.object.isRequired,\n    onFieldChange: PropTypes.func.isRequired,\n    onOpenPathPicker: PropTypes.func.isRequired,\n    t: PropTypes.func.isRequired\n};\n\nexport default ByAuthorAndDate;\n","export const OVERVIEW_QUERY = `\n    query ContentReportsOverview($siteKey: String!, $language: String) {\n        admin {\n            contentReports(siteKey: $siteKey, language: $language) {\n                overview {\n                    siteName\n                    siteDisplayableName\n                    nbPages\n                    nbTemplates\n                    nbUsers\n                    nbContents\n                    nbEditorialContents\n                    nbWorkflowTasks\n                    nbFiles\n                    nbImages\n                    languages\n                    nbLanguages\n                    newContentLast30Days\n                    modifiedContentLast30Days\n                    publishedContentLast30Days\n                    unpublishedNodes\n                    publishedNodes\n                    averageTimeToPublish\n                    topContributors {\n                        username\n                        contentCount\n                    }\n                }\n            }\n        }\n    }\n`;\n\nexport const RAW_REPORT_QUERY = `\n    query ContentReportRaw($siteKey: String!, $language: String, $reportId: String!, $parameterName1: String, $parameterValue1: String, $parameterName2: String, $parameterValue2: String, $parameterName3: String, $parameterValue3: String, $parameterName4: String, $parameterValue4: String, $parameterName5: String, $parameterValue5: String, $parameterName6: String, $parameterValue6: String, $offset: Int, $limit: Int, $sortColumn: Int, $sortDirection: String) {\n        admin {\n            contentReports(siteKey: $siteKey, language: $language) {\n                rawReport(reportId: $reportId, parameterName1: $parameterName1, parameterValue1: $parameterValue1, parameterName2: $parameterName2, parameterValue2: $parameterValue2, parameterName3: $parameterName3, parameterValue3: $parameterValue3, parameterName4: $parameterName4, parameterValue4: $parameterValue4, parameterName5: $parameterName5, parameterValue5: $parameterValue5, parameterName6: $parameterName6, parameterValue6: $parameterValue6, offset: $offset, limit: $limit, sortColumn: $sortColumn, sortDirection: $sortDirection)\n            }\n        }\n    }\n`;\n\nexport const GET_ALL_USERS_QUERY = `\n  query GetAllUsers {\n    jcr {\n      nodesByQuery(\n        query: \"SELECT * FROM [jnt:user]\"\n        queryLanguage: SQL2\n      ) {\n        nodes {\n          name\n          property(name: \"j:email\") {\n            value\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const GET_SITE_LANGUAGES_QUERY = `\n  query GetSiteLanguages($siteKey: String!) {\n    jcr {\n      nodeByPath(path: $siteKey) {\n        site {\n          languages {\n            displayName\n            language\n          }\n        }\n      }\n    }\n  }\n`;\n","import React, {useState, useMemo, useCallback} from 'react';\nimport PropTypes from 'prop-types';\nimport {useTranslation} from 'react-i18next';\nimport {Typography, Table, TableHead, TableBody, TableRow, TableHeadCell, TableBodyCell, TablePagination, Button} from '@jahia/moonstone';\nimport {Download} from '@jahia/moonstone/dist/icons';\nimport styles from './ReportResultsTable.module.scss';\n\nconst formatDate = dateString => {\n    if (!dateString) {\n        return '-';\n    }\n\n    try {\n        const date = new Date(dateString);\n        return new Intl.DateTimeFormat('en-US', {\n            year: 'numeric',\n            month: 'short',\n            day: 'numeric',\n            hour: '2-digit',\n            minute: '2-digit'\n        }).format(date);\n    } catch {\n        return dateString;\n    }\n};\n\nconst renderBooleanValue = value => {\n    const isTrue = value === true || value === 'true' || value === 'True' || value === '1';\n    const isFalse = value === false || value === 'false' || value === 'False' || value === '0';\n\n    if (isTrue) {\n        return <span className={styles.booleanTrue}>✓</span>;\n    }\n\n    if (isFalse) {\n        return <span className={styles.booleanFalse}>✗</span>;\n    }\n\n    return '-';\n};\n\n// Helper function to export data to CSV\nconst exportDataToCSV = (data, columns, useCustomColumns) => {\n    const headers = useCustomColumns ?\n        columns.map(col => col.key) :\n        ['Title', 'Path', 'Type', 'Created', 'Modified', 'Published', 'Locked'];\n\n    const csvContent = [\n        headers.join(','),\n        ...data.map(row => row.map(cell => {\n            const cellStr = String(cell || '');\n            return cellStr.includes(',') || cellStr.includes('\"') ?\n                `\"${cellStr.replace(/\"/g, '\"\"')}\"` :\n                cellStr;\n        }).join(','))\n    ].join('\\n');\n\n    const blob = new Blob([csvContent], {type: 'text/csv;charset=utf-8;'});\n    const link = document.createElement('a');\n    link.href = URL.createObjectURL(blob);\n    link.download = `report_${new Date().getTime()}.csv`;\n    link.click();\n    URL.revokeObjectURL(link.href);\n};\n\n// Helper function to export data to JSON\nconst exportDataToJSON = data => {\n    const jsonContent = JSON.stringify(data, null, 2);\n    const blob = new Blob([jsonContent], {type: 'application/json;charset=utf-8;'});\n    const link = document.createElement('a');\n    link.href = URL.createObjectURL(blob);\n    link.download = `report_${new Date().getTime()}.json`;\n    link.click();\n    URL.revokeObjectURL(link.href);\n};\n\n// Helper function to build jContent edit URL\nconst buildJContentUrl = (path, siteKey, language) => {\n    const baseUrl = window.contextJsParameters?.contextPath || '';\n    // Remove /sites/{siteKey} prefix from path if present\n    let cleanPath = path.replace(`/sites/${siteKey}`, '');\n    // Remove leading slash for jContent URL format\n    cleanPath = cleanPath.startsWith('/') ? cleanPath.substring(1) : cleanPath;\n    // Build jContent URL: /jahia/jcontent/{siteKey}/{language}/pages/{path}\n    return `${baseUrl}/jahia/jcontent/${siteKey}/${language || 'en'}/pages/${cleanPath}`;\n};\n\n// Component to render table header cells\nconst TableHeaders = ({useCustomColumns, columns, sortColumn, sortDirection, handleSort, t, siteLanguages}) => {\n    if (useCustomColumns) {\n        return columns.map((column, index) => {\n            // For language columns in i18n reports, display the language code directly\n            const headerLabel = column.isLanguage && siteLanguages && siteLanguages[column.languageIndex - 1] ?\n                siteLanguages[column.languageIndex - 1] :\n                t(column.labelKey);\n\n            return (\n                <TableHeadCell\n                    key={column.key}\n                    className={column.sortable ? styles.sortableHeader : undefined}\n                    onClick={column.sortable ? () => handleSort(index) : undefined}\n                >\n                    <span className={styles.headerContent}>\n                        {headerLabel}\n                        {column.sortable && sortColumn === index && (\n                            <span className={styles.sortIcon}>{sortDirection === 'asc' ? '▲' : '▼'}</span>\n                        )}\n                    </span>\n                </TableHeadCell>\n            );\n        });\n    }\n\n    // Default headers for backward compatibility\n    const defaultHeaders = [\n        {label: 'Title', index: 0},\n        {label: 'Path', index: 1},\n        {label: 'Type', index: 2},\n        {label: 'Created', index: 3},\n        {label: 'Modified', index: 4},\n        {label: 'Published', index: 5},\n        {label: 'Lock', index: 6}\n    ];\n\n    return defaultHeaders.map(({label, index}) => (\n        <TableHeadCell key={label} className={styles.sortableHeader} onClick={() => handleSort(index)}>\n            <span className={styles.headerContent}>\n                {label}\n                {sortColumn === index && (\n                    <span className={styles.sortIcon}>{sortDirection === 'asc' ? '▲' : '▼'}</span>\n                )}\n            </span>\n        </TableHeadCell>\n    ));\n};\n\nTableHeaders.propTypes = {\n    useCustomColumns: PropTypes.bool.isRequired,\n    columns: PropTypes.array,\n    sortColumn: PropTypes.number,\n    sortDirection: PropTypes.string.isRequired,\n    handleSort: PropTypes.func.isRequired,\n    t: PropTypes.func.isRequired,\n    siteLanguages: PropTypes.arrayOf(PropTypes.string)\n};\n\nconst ReportResultsTable = ({data, siteKey, language, columns, reportId, reportType}) => {\n    // Hooks must be at the top before any conditionals\n    const {t} = useTranslation('contentReportReact');\n    const [currentPage, setCurrentPage] = useState(1);\n    const [rowsPerPage, setRowsPerPage] = useState(10);\n    const [sortColumn, setSortColumn] = useState(null);\n    const [sortDirection, setSortDirection] = useState('asc');\n\n    console.log('ReportResultsTable - data:', data);\n    console.log('ReportResultsTable - siteKey:', siteKey);\n    console.log('ReportResultsTable - language:', language);\n    console.log('ReportResultsTable - columns:', columns);\n    console.log('ReportResultsTable - reportId:', reportId);\n    console.log('ReportResultsTable - reportType:', reportType);\n\n    // For i18n reports, detect site languages and generate dynamic language columns\n    const siteLanguages = useMemo(() => {\n        if (reportType === 'i18n' && data?.siteLanguages) {\n            return data.siteLanguages;\n        }\n\n        return null;\n    }, [reportType, data]);\n\n    // For i18n reports, generate dynamic language columns from the first data row\n    const dynamicColumns = useMemo(() => {\n        if (reportType === 'i18n' && data?.data && data.data.length > 0) {\n            const firstRow = data.data[0];\n            const cols = [\n                {key: 'path', labelKey: 'fields.path', sortable: true, type: 'link'}\n            ];\n\n            // Remaining columns are language codes (en, fr, etc.)\n            for (let i = 1; i < firstRow.length; i++) {\n                // Generate language column - the header will be the language code itself\n                cols.push({\n                    key: `lang_${i}`,\n                    labelKey: `lang_${i}`, // We'll handle this specially in rendering\n                    sortable: true,\n                    isLanguage: true,\n                    languageIndex: i\n                });\n            }\n\n            return cols;\n        }\n\n        return null;\n    }, [reportType, data]);\n\n    // Determine if we should use custom columns\n    const useCustomColumns = (columns && columns.length > 0) || (reportType === 'i18n' && dynamicColumns);\n    const effectiveColumns = dynamicColumns || columns;\n\n    // Helper function to render cell value based on column type\n    const renderCellValue = useCallback((value, columnType, rowData, columnKey) => {\n        if (columnType === 'date') {\n            return formatDate(value);\n        }\n\n        if (columnType === 'boolean') {\n            return renderBooleanValue(value);\n        }\n\n        if (columnType === 'html') {\n            // Render HTML content (interprets <br/> and other HTML tags)\n            // eslint-disable-next-line react/no-danger\n            return value ? <span dangerouslySetInnerHTML={{__html: value}}/> : '-';\n        }\n\n        if (columnType === 'link' && siteKey && language) {\n            // For path columns in i18n reports, show the path as a link\n            if (columnKey === 'path' && value) {\n                const jcontentUrl = buildJContentUrl(value, siteKey, language);\n                return (\n                    <a href={jcontentUrl} target=\"_blank\" rel=\"noopener noreferrer\" className={styles.pathLink}>\n                        {value}\n                    </a>\n                );\n            }\n\n            // For other link columns (like Page), use the value directly if it's a path, or fall back to index 4\n            const path = value || rowData[4];\n            if (path) {\n                const jcontentUrl = buildJContentUrl(path, siteKey, language);\n                return (\n                    <a href={jcontentUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n                        {t('result.viewContent')}\n                    </a>\n                );\n            }\n\n            return '-';\n        }\n\n        return value || '-';\n    }, [siteKey, language, t]);\n\n    // Handle column sorting\n    const handleSort = columnIndex => {\n        if (sortColumn === columnIndex) {\n            // Toggle direction if clicking same column\n            setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\n        } else {\n            // New column, default to ascending\n            setSortColumn(columnIndex);\n            setSortDirection('asc');\n        }\n\n        // Reset to first page when sorting\n        setCurrentPage(1);\n    };\n\n    // Helper function to compare values for sorting\n    const compareValues = useCallback((aVal, bVal, columnIndex) => {\n        // Handle null/undefined values\n        if (aVal === null || aVal === undefined) {\n            return 1;\n        }\n\n        if (bVal === null || bVal === undefined) {\n            return -1;\n        }\n\n        // For dates (columns 3, 4: created, modified)\n        if (columnIndex === 3 || columnIndex === 4) {\n            const aDate = new Date(aVal);\n            const bDate = new Date(bVal);\n            return sortDirection === 'asc' ? aDate - bDate : bDate - aDate;\n        }\n\n        // For booleans (columns 5, 6: published, locked)\n        if (columnIndex === 5 || columnIndex === 6) {\n            const aBool = aVal === true || aVal === 'true' || aVal === 'True' || aVal === '1';\n            const bBool = bVal === true || bVal === 'true' || bVal === 'True' || bVal === '1';\n            const aNum = aBool ? 1 : 0;\n            const bNum = bBool ? 1 : 0;\n            return sortDirection === 'asc' ? aNum - bNum : bNum - aNum;\n        }\n\n        // For strings (title, path, type)\n        const aStr = String(aVal).toLowerCase();\n        const bStr = String(bVal).toLowerCase();\n        return sortDirection === 'asc' ? aStr.localeCompare(bStr) : bStr.localeCompare(aStr);\n    }, [sortDirection]);\n\n    // Sort data\n    const sortedData = useMemo(() => {\n        if (!data || !Array.isArray(data.data) || sortColumn === null) {\n            return data?.data || [];\n        }\n\n        const sorted = [...data.data].sort((a, b) => compareValues(a[sortColumn], b[sortColumn], sortColumn));\n\n        return sorted;\n    }, [data, sortColumn, compareValues]);\n\n    // Paginate data (currentPage is 1-based, so subtract 1 for array index)\n    const paginatedData = useMemo(() => {\n        if (!sortedData || !Array.isArray(sortedData)) {\n            return [];\n        }\n\n        const startIndex = (currentPage - 1) * rowsPerPage;\n        return sortedData.slice(startIndex, startIndex + rowsPerPage);\n    }, [sortedData, currentPage, rowsPerPage]);\n\n    if (!data || !Array.isArray(data.data) || data.data.length === 0) {\n        console.log('ReportResultsTable - No data to display');\n        return (\n            <div className={styles.noResults}>\n                <Typography variant=\"body\" weight=\"bold\">No results found</Typography>\n            </div>\n        );\n    }\n\n    console.log('ReportResultsTable - Rendering table with', data.data.length, 'rows');\n\n    const buildEditUrl = path => buildJContentUrl(path, siteKey, language);\n    const exportToCSV = () => exportDataToCSV(data.data, effectiveColumns, useCustomColumns);\n    const exportToJSON = () => exportDataToJSON(data);\n\n    return (\n        <div className={styles.tableContainer}>\n            <div className={styles.resultsHeader}>\n                <div className={styles.resultsInfo}>\n                    <Typography variant=\"body\" weight=\"bold\">\n                        {data.recordsTotal || 0} results found\n                    </Typography>\n                </div>\n                <div className={styles.exportButtons}>\n                    <Button\n                        size=\"default\"\n                        variant=\"outlined\"\n                        label=\"Export CSV\"\n                        icon={<Download/>}\n                        onClick={exportToCSV}\n                    />\n                    <Button\n                        size=\"default\"\n                        variant=\"outlined\"\n                        label=\"Export JSON\"\n                        icon={<Download/>}\n                        onClick={exportToJSON}\n                    />\n                </div>\n            </div>\n            <Table className={styles.table}>\n                <TableHead>\n                    <TableRow>\n                        <TableHeaders\n                            useCustomColumns={useCustomColumns}\n                            columns={effectiveColumns}\n                            sortColumn={sortColumn}\n                            sortDirection={sortDirection}\n                            handleSort={handleSort}\n                            t={t}\n                            siteLanguages={siteLanguages}\n                        />\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {paginatedData.map((row, rowIndex) => {\n                        const rowKey = `row-${rowIndex}-${row[0] || rowIndex}`;\n                        return (\n                            <TableRow key={rowKey}>\n                                {useCustomColumns ? (\n                                    // Render custom columns based on report configuration\n                                    effectiveColumns.map((column, colIndex) => {\n                                        const cellValue = row[colIndex];\n                                        const cellClassName = column.type === 'date' ? styles.dateCell :\n                                            column.type === 'boolean' ? styles.booleanCell :\n                                            (column.isLanguage || column.key === 'path') ? styles.pathCell :\n                                            (column.type === 'html' && column.noWrap === false) ? styles.htmlCell :\n                                            undefined;\n                                        return (\n                                            <TableBodyCell\n                                                key={`${rowKey}-${column.key}`}\n                                                className={cellClassName}\n                                            >\n                                                {renderCellValue(cellValue, column.type, row, column.key)}\n                                            </TableBodyCell>\n                                        );\n                                    })\n                                ) : (\n                                    // Default columns for backward compatibility\n                                    <>\n                                        <TableBodyCell className={styles.titleCell}>{row[0] || '-'}</TableBodyCell>\n                                        <TableBodyCell className={styles.pathCell}>\n                                            {row[1] ? (\n                                                <a\n                                                    href={buildEditUrl(row[1])}\n                                                    target=\"_blank\"\n                                                    rel=\"noopener noreferrer\"\n                                                    className={styles.pathLink}\n                                                >\n                                                    {row[1]}\n                                                </a>\n                                            ) : '-'}\n                                        </TableBodyCell>\n                                        <TableBodyCell>{row[2] || '-'}</TableBodyCell>\n                                        <TableBodyCell className={styles.dateCell}>{formatDate(row[3])}</TableBodyCell>\n                                        <TableBodyCell className={styles.dateCell}>{formatDate(row[4])}</TableBodyCell>\n                                        <TableBodyCell className={styles.booleanCell}>{renderBooleanValue(row[5])}</TableBodyCell>\n                                        <TableBodyCell className={styles.booleanCell}>{renderBooleanValue(row[6])}</TableBodyCell>\n                                    </>\n                                )}\n                            </TableRow>\n                        );\n                    })}\n                </TableBody>\n            </Table>\n            <TablePagination\n                currentPage={currentPage}\n                totalNumberOfRows={sortedData.length}\n                rowsPerPage={rowsPerPage}\n                rowsPerPageOptions={[10, 25, 50, 100]}\n                label={{\n                    rowsPerPage: 'Rows per page:',\n                    of: 'of'\n                }}\n                onPageChange={setCurrentPage}\n                onRowsPerPageChange={setRowsPerPage}\n            />\n        </div>\n    );\n};\n\nReportResultsTable.propTypes = {\n    data: PropTypes.shape({\n        recordsTotal: PropTypes.number,\n        recordsFiltered: PropTypes.number,\n        data: PropTypes.arrayOf(PropTypes.array),\n        siteLanguages: PropTypes.arrayOf(PropTypes.string)\n    }),\n    siteKey: PropTypes.string.isRequired,\n    language: PropTypes.string,\n    columns: PropTypes.arrayOf(PropTypes.shape({\n        key: PropTypes.string,\n        labelKey: PropTypes.string,\n        sortable: PropTypes.bool,\n        type: PropTypes.string\n    })),\n    reportId: PropTypes.string,\n    reportType: PropTypes.string\n};\n\nexport default ReportResultsTable;\n","import React, {useCallback, useEffect, useMemo, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport {Header, LayoutContent, Accordion, AccordionItem, Paper, Typography, Button, Input} from '@jahia/moonstone';\nimport {useTranslation} from 'react-i18next';\nimport axios from 'axios';\nimport {buildReportsConfig, reportCategories} from './AdminPanel.constants';\nimport ByAuthorAndDate from './reports/ByAuthorAndDate';\nimport ReportResultsTable from './reports/ReportResultsTable';\nimport styles from './AdminPanel.module.scss';\nimport {OVERVIEW_QUERY, RAW_REPORT_QUERY, GET_SITE_LANGUAGES_QUERY} from '../graphql/queries';\n\nconst REPORT_COMPONENTS = {\n    ByAuthorAndDate\n};\n\nconst resolveReportComponent = componentName => {\n    if (!componentName) {\n        return null;\n    }\n\n    // Direct mapping approach - try exact match first\n    if (componentName === 'ByAuthorAndDate') {\n        return ByAuthorAndDate;\n    }\n\n    // Fallback to dynamic lookup\n    const normalizedName = typeof componentName === 'string' ? componentName.trim() : String(componentName);\n    const componentEntry = REPORT_COMPONENTS[normalizedName];\n\n    if (!componentEntry) {\n        return null;\n    }\n\n    // Handle ES modules with default export\n    if (typeof componentEntry === 'object' && componentEntry !== null && 'default' in componentEntry) {\n        return componentEntry.default;\n    }\n\n    return componentEntry;\n};\n\nconst overviewStyles = {\n    grid: {display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))', gap: '16px', marginTop: '16px'},\n    card: {padding: '16px', borderRadius: '6px', background: '#ffffff', border: '1px solid #e1e7f5', boxShadow: '0 1px 2px rgba(0,0,0,0.05)'},\n    value: {fontSize: '26px', fontWeight: '700', color: '#0c2f6b', marginTop: '6px'}\n};\n\nconst buildInitialFields = (report, context) => {\n    if (report && report.fields) {\n        return report.fields.reduce((acc, field) => {\n            const defaultValue = typeof field.defaultValue === 'function' ? field.defaultValue(context) : field.defaultValue;\n            if (field.type === 'checkbox') {\n                acc[field.name] = defaultValue === undefined ? false : Boolean(defaultValue);\n            } else {\n                acc[field.name] = defaultValue === undefined ? '' : defaultValue;\n            }\n\n            return acc;\n        }, {});\n    }\n\n    return {};\n};\n\nconst isFieldActive = (field, values) => {\n    if (field.dependsOn) {\n        const dependencyValue = values[field.dependsOn];\n        if (field.dependsValue !== undefined) {\n            return dependencyValue === field.dependsValue;\n        }\n\n        return Boolean(dependencyValue);\n    }\n\n    return true;\n};\n\nconst buildParameterPayload = (fields, definitions) => {\n    const entries = [];\n\n    console.log('[buildParameterPayload] Input fields:', fields);\n    console.log('[buildParameterPayload] Definitions:', definitions);\n\n    (definitions || []).forEach(field => {\n        if (!isFieldActive(field, fields)) {\n            console.log(`[buildParameterPayload] Field ${field.name} is not active, skipping`);\n            return;\n        }\n\n        const value = fields[field.name];\n        console.log(`[buildParameterPayload] Processing field ${field.name}, value:`, value, 'type:', field.type);\n\n        if (field.type === 'checkbox') {\n            entries.push({name: field.name, value: value ? 'true' : 'false'});\n            console.log(`[buildParameterPayload] Added checkbox ${field.name} = ${value ? 'true' : 'false'}`);\n            return;\n        }\n\n        if (value === undefined || value === null || `${value}`.trim() === '') {\n            if (field.includeIfEmpty) {\n                entries.push({name: field.name, value: ''});\n                console.log(`[buildParameterPayload] Added empty field ${field.name} (includeIfEmpty=true)`);\n            } else {\n                console.log(`[buildParameterPayload] Skipping empty field ${field.name} (includeIfEmpty=false)`);\n            }\n\n            return;\n        }\n\n        entries.push({name: field.name, value: `${value}`});\n        console.log(`[buildParameterPayload] Added field ${field.name} = ${value}`);\n    });\n\n    console.log('[buildParameterPayload] Final entries:', entries);\n    return entries;\n};\n\nconst validateFields = (definitions, values, t) => {\n    for (const field of definitions || []) {\n        if (!isFieldActive(field, values)) {\n            continue;\n        }\n\n        const required = field.required || (typeof field.requiredWhen === 'function' && field.requiredWhen(values));\n        if (!required) {\n            continue;\n        }\n\n        if (field.type === 'checkbox') {\n            continue;\n        }\n\n        const value = values[field.name];\n        if (value === undefined || value === null || `${value}`.trim() === '') {\n            return t('errors.requiredField', {field: t(field.labelKey)});\n        }\n    }\n\n    return null;\n};\n\nconst tryParseJSON = value => {\n    if (typeof value === 'string') {\n        try {\n            const parsed = JSON.parse(value);\n\n            // Normalize different backend response formats\n            // Some reports return {totalContent, items: [...]} instead of {recordsTotal, data: [...]}\n            if (parsed && parsed.items && Array.isArray(parsed.items)) {\n                // Convert items array of objects to array of arrays for table rendering\n                const data = parsed.items.map(item => {\n                    // Extract values in a consistent order based on keys\n                    return [item.title, item.type, item.path, item.date];\n                });\n\n                return {\n                    recordsTotal: parsed.totalContent || data.length,\n                    recordsFiltered: parsed.totalContent || data.length,\n                    data: data\n                };\n            }\n\n            return parsed;\n        } catch (_) {\n            return null;\n        }\n    }\n\n    return value;\n};\n\nconst OverviewResult = ({data, labelKey, descriptionKey, t}) => {\n    if (!data) {\n        return null;\n    }\n\n    const metrics = [\n        {label: t('result.nbPages'), value: data.nbPages},\n        {label: t('result.nbTemplates'), value: data.nbTemplates},\n        {label: t('result.nbUsers'), value: data.nbUsers},\n        {label: t('result.nbContents'), value: data.nbContents},\n        {label: t('result.nbEditorialContents'), value: data.nbEditorialContents},\n        {label: t('result.nbWorkflowTasks'), value: data.nbWorkflowTasks},\n        {label: t('result.nbFiles'), value: data.nbFiles},\n        {label: t('result.nbImages'), value: data.nbImages}\n    ];\n\n    // Function to get flag emoji from language code\n    const getFlagEmoji = langCode => {\n        const flagMap = {\n            en: '🇬🇧',\n            fr: '🇫🇷',\n            de: '🇩🇪',\n            es: '🇪🇸',\n            it: '🇮🇹',\n            pt: '🇵🇹',\n            nl: '🇳🇱',\n            ru: '🇷🇺',\n            ja: '🇯🇵',\n            zh: '🇨🇳',\n            ar: '🇸🇦',\n            ko: '🇰🇷',\n            pl: '🇵🇱',\n            tr: '🇹🇷',\n            sv: '🇸🇪',\n            da: '🇩🇰',\n            no: '🇳🇴',\n            fi: '🇫🇮',\n            cs: '🇨🇿',\n            el: '🇬🇷'\n        };\n        return flagMap[langCode] || '🌐';\n    };\n\n    return (\n        <Paper style={{padding: '32px', borderRadius: '8px', boxShadow: '0 1px 3px rgba(0, 0, 0, 0.06), 0 1px 2px rgba(0, 0, 0, 0.04)'}}>\n            <div style={{paddingBottom: '20px', borderBottom: '1px solid #e8ecf0', marginBottom: '24px'}}>\n                <Typography variant=\"heading\" weight=\"bold\" style={{fontSize: '20px', color: '#1a2332', marginBottom: '6px', lineHeight: '1.4'}}>\n                    {t(labelKey)}\n                </Typography>\n                {descriptionKey && (\n                    <Typography variant=\"body\" style={{color: '#5c6f90', fontSize: '14px', lineHeight: '1.6'}}>\n                        {t(descriptionKey)}\n                    </Typography>\n                )}\n            </div>\n            <div>\n                <div style={{color: '#2c3e5d', fontWeight: '600', fontSize: '16px', marginBottom: '16px'}}>{data.siteDisplayableName || data.siteName}</div>\n                <div style={overviewStyles.grid}>\n                    {metrics.map(item => (\n                        <div key={item.label} style={overviewStyles.card}>\n                            <div style={{color: '#5c6f90', fontSize: '13px', fontWeight: '500'}}>{item.label}</div>\n                            <div style={overviewStyles.value}>{item.value}</div>\n                        </div>\n                    ))}\n                    {data.languages && data.languages.length > 0 && (\n                        <div style={{...overviewStyles.card, gridColumn: 'span 2'}}>\n                            <div style={{color: '#5c6f90', fontSize: '13px', fontWeight: '500', marginBottom: '8px'}}>\n                                {t('result.languages')} ({data.nbLanguages})\n                            </div>\n                            <div style={{display: 'flex', flexWrap: 'wrap', gap: '8px'}}>\n                                {data.languages.map(lang => (\n                                    <div\n                                        key={lang}\n                                        style={{\n                                            display: 'flex',\n                                            alignItems: 'center',\n                                            gap: '6px',\n                                            padding: '6px 12px',\n                                            backgroundColor: '#f4f6f9',\n                                            borderRadius: '6px',\n                                            fontSize: '14px',\n                                            fontWeight: '500',\n                                            color: '#2c3e5d'\n                                        }}\n                                    >\n                                        <span style={{fontSize: '18px'}}>{getFlagEmoji(lang)}</span>\n                                        <span>{lang.toUpperCase()}</span>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    )}\n                </div>\n\n                {/* Content Activity Section */}\n                <div style={{marginTop: '32px', paddingTop: '24px', borderTop: '2px solid #e8ecf0'}}>\n                    <Typography variant=\"heading\" weight=\"bold\" style={{fontSize: '18px', color: '#1a2332', marginBottom: '16px'}}>\n                        {t('result.contentActivity')}\n                    </Typography>\n\n                    {/* Activity Metrics Grid */}\n                    <div style={overviewStyles.grid}>\n                        <div style={overviewStyles.card}>\n                            <div style={{color: '#5c6f90', fontSize: '13px', fontWeight: '500'}}>{t('result.newContentLast30Days')}</div>\n                            <div style={{...overviewStyles.value, color: '#22863a'}}>{data.newContentLast30Days}</div>\n                        </div>\n                        <div style={overviewStyles.card}>\n                            <div style={{color: '#5c6f90', fontSize: '13px', fontWeight: '500'}}>{t('result.modifiedContentLast30Days')}</div>\n                            <div style={{...overviewStyles.value, color: '#0366d6'}}>{data.modifiedContentLast30Days}</div>\n                        </div>\n                        <div style={overviewStyles.card}>\n                            <div style={{color: '#5c6f90', fontSize: '13px', fontWeight: '500'}}>{t('result.publishedContentLast30Days')}</div>\n                            <div style={{...overviewStyles.value, color: '#6f42c1'}}>{data.publishedContentLast30Days}</div>\n                        </div>\n                        <div style={overviewStyles.card}>\n                            <div style={{color: '#5c6f90', fontSize: '13px', fontWeight: '500'}}>{t('result.publishedNodes')}</div>\n                            <div style={overviewStyles.value}>{data.publishedNodes}</div>\n                        </div>\n                        <div style={overviewStyles.card}>\n                            <div style={{color: '#5c6f90', fontSize: '13px', fontWeight: '500'}}>{t('result.unpublishedNodes')}</div>\n                            <div style={overviewStyles.value}>{data.unpublishedNodes}</div>\n                        </div>\n                        <div style={overviewStyles.card}>\n                            <div style={{color: '#5c6f90', fontSize: '13px', fontWeight: '500'}}>{t('result.averageTimeToPublish')}</div>\n                            <div style={overviewStyles.value}>{data.averageTimeToPublish?.toFixed(1)} {t('result.days')}</div>\n                        </div>\n                    </div>\n\n                    {/* Top Contributors */}\n                    <div style={{...overviewStyles.card, marginTop: '16px'}}>\n                        <div style={{color: '#5c6f90', fontSize: '13px', fontWeight: '500', marginBottom: '12px'}}>\n                            {t('result.topContributors')}\n                        </div>\n                        {data.topContributors && data.topContributors.length > 0 ? (\n                            <div style={{display: 'flex', flexDirection: 'column', gap: '8px'}}>\n                                {data.topContributors.map((contributor, index) => (\n                                    <div\n                                        key={contributor.username}\n                                        style={{\n                                            display: 'flex',\n                                            justifyContent: 'space-between',\n                                            alignItems: 'center',\n                                            padding: '8px 12px',\n                                            backgroundColor: '#f4f6f9',\n                                            borderRadius: '4px'\n                                        }}\n                                    >\n                                        <div style={{display: 'flex', alignItems: 'center', gap: '8px'}}>\n                                            <span style={{\n                                                display: 'inline-flex',\n                                                alignItems: 'center',\n                                                justifyContent: 'center',\n                                                width: '24px',\n                                                height: '24px',\n                                                borderRadius: '50%',\n                                                backgroundColor: index === 0 ? '#ffd700' : index === 1 ? '#c0c0c0' : index === 2 ? '#cd7f32' : '#e8ecf0',\n                                                fontSize: '12px',\n                                                fontWeight: 'bold',\n                                                color: index < 3 ? '#fff' : '#5c6f90'\n                                            }}\n                                            >\n                                                {index + 1}\n                                            </span>\n                                            <span style={{fontWeight: '500', color: '#2c3e5d'}}>{contributor.username}</span>\n                                        </div>\n                                        <span style={{\n                                            fontSize: '14px',\n                                            fontWeight: '600',\n                                            color: '#0c2f6b',\n                                            backgroundColor: '#e1e7f5',\n                                            padding: '4px 8px',\n                                            borderRadius: '4px'\n                                        }}\n                                        >\n                                            {contributor.contentCount} {t('result.items')}\n                                        </span>\n                                    </div>\n                                ))}\n                            </div>\n                        ) : (\n                            <div style={{color: '#8b9bb3', fontSize: '13px', fontStyle: 'italic', padding: '12px'}}>\n                                {t('result.noContributorsData')}\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        </Paper>\n    );\n};\n\nOverviewResult.propTypes = {\n    data: PropTypes.shape({\n        nbPages: PropTypes.number,\n        nbTemplates: PropTypes.number,\n        nbUsers: PropTypes.number,\n        nbContents: PropTypes.number,\n        nbEditorialContents: PropTypes.number,\n        nbWorkflowTasks: PropTypes.number,\n        nbFiles: PropTypes.number,\n        nbImages: PropTypes.number,\n        languages: PropTypes.arrayOf(PropTypes.string),\n        nbLanguages: PropTypes.number,\n        siteDisplayableName: PropTypes.string,\n        siteName: PropTypes.string,\n        newContentLast30Days: PropTypes.number,\n        modifiedContentLast30Days: PropTypes.number,\n        publishedContentLast30Days: PropTypes.number,\n        unpublishedNodes: PropTypes.number,\n        publishedNodes: PropTypes.number,\n        averageTimeToPublish: PropTypes.number,\n        topContributors: PropTypes.arrayOf(PropTypes.shape({\n            username: PropTypes.string,\n            contentCount: PropTypes.number\n        }))\n    }),\n    labelKey: PropTypes.string.isRequired,\n    descriptionKey: PropTypes.string,\n    t: PropTypes.func.isRequired\n};\n\nconst RawResult = ({result, siteKey, language, labelKey, descriptionKey, selectedReport, t}) => {\n    if (!result) {\n        return null;\n    }\n\n    const parsed = result.parsed;\n\n    return (\n        <Paper style={{padding: '32px', borderRadius: '8px', boxShadow: '0 1px 3px rgba(0, 0, 0, 0.06), 0 1px 2px rgba(0, 0, 0, 0.04)'}}>\n            <div style={{paddingBottom: '20px', borderBottom: '1px solid #e8ecf0', marginBottom: '24px'}}>\n                <Typography variant=\"heading\" weight=\"bold\" style={{fontSize: '20px', color: '#1a2332', marginBottom: '6px', lineHeight: '1.4'}}>\n                    {t(labelKey)}\n                </Typography>\n                {descriptionKey && (\n                    <Typography variant=\"body\" style={{color: '#5c6f90', fontSize: '14px', lineHeight: '1.6'}}>\n                        {t(descriptionKey)}\n                    </Typography>\n                )}\n            </div>\n            {parsed && parsed.data && (\n                <ReportResultsTable\n                    data={parsed}\n                    siteKey={siteKey}\n                    language={language}\n                    columns={selectedReport?.columns}\n                    reportId={selectedReport?.id}\n                    reportType={selectedReport?.type}\n                />\n            )}\n        </Paper>\n    );\n};\n\nRawResult.propTypes = {\n    result: PropTypes.shape({\n        payload: PropTypes.string,\n        parsed: PropTypes.shape({\n            recordsTotal: PropTypes.number,\n            recordsFiltered: PropTypes.number,\n            data: PropTypes.arrayOf(PropTypes.array)\n        })\n    }),\n    siteKey: PropTypes.string.isRequired,\n    language: PropTypes.string,\n    labelKey: PropTypes.string.isRequired,\n    descriptionKey: PropTypes.string,\n    selectedReport: PropTypes.object,\n    t: PropTypes.func.isRequired\n};\n\nconst ReportMenu = ({reports, selectedReportId, onSelectReport, t}) => {\n    const [openedCategory, setOpenedCategory] = useState('overview');\n\n    // Group reports by category\n    const reportsByCategory = useMemo(() => {\n        const grouped = {};\n        reportCategories.forEach(cat => {\n            grouped[cat.id] = [];\n        });\n\n        (reports || []).forEach(report => {\n            if (report.category && grouped[report.category]) {\n                grouped[report.category].push(report);\n            }\n        });\n\n        return grouped;\n    }, [reports]);\n\n    return (\n        <Paper className={styles.menuPaper}>\n            <nav className={styles.menu}>\n                <Accordion\n                    openedItem={openedCategory}\n                    onSetOpenedItem={setOpenedCategory}\n                >\n                    {reportCategories.map(category => {\n                        const categoryReports = reportsByCategory[category.id];\n                        if (!categoryReports || categoryReports.length === 0) {\n                            return null;\n                        }\n\n                        return (\n                            <AccordionItem\n                                key={category.id}\n                                id={category.id}\n                                label={t(category.labelKey)}\n                            >\n                                <div className={styles.categoryReports}>\n                                    {categoryReports.map(report => {\n                                        const isActive = report.id === selectedReportId;\n                                        const buttonClassName = `${styles.menuButton}${isActive ? ` ${styles.menuButtonActive}` : ''}`;\n\n                                        return (\n                                            <button\n                                                key={report.id}\n                                                type=\"button\"\n                                                className={buttonClassName}\n                                                onClick={() => onSelectReport(report.id)}\n                                            >\n                                                {t(report.labelKey)}\n                                            </button>\n                                        );\n                                    })}\n                                </div>\n                            </AccordionItem>\n                        );\n                    })}\n                </Accordion>\n            </nav>\n        </Paper>\n    );\n};\n\nReportMenu.propTypes = {\n    onSelectReport: PropTypes.func.isRequired,\n    reports: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        labelKey: PropTypes.string.isRequired,\n        category: PropTypes.string\n    })),\n    selectedReportId: PropTypes.string,\n    t: PropTypes.func.isRequired\n};\n\nconst FormActions = ({isLoading, lastUpdated, t}) => (\n    <div className={styles.actions}>\n        <button type=\"submit\" className={styles.buttonPrimary} disabled={isLoading}>\n            {isLoading ? t('states.loading') : t('actions.runReport')}\n        </button>\n        {lastUpdated && (\n            <span style={{color: '#4b5c87', fontSize: '13px'}}>\n                {t('states.lastUpdated', {value: lastUpdated.toLocaleString()})}\n            </span>\n        )}\n    </div>\n);\n\nFormActions.propTypes = {\n    isLoading: PropTypes.bool.isRequired,\n    lastUpdated: PropTypes.instanceOf(Date),\n    t: PropTypes.func.isRequired\n};\n\nconst ResultSection = ({error, isLoading, result, siteKey, language, report, t}) => (\n    <>\n        {error && (\n            <div className={styles.error}>\n                {error.message}\n            </div>\n        )}\n\n        {!isLoading && result && result.kind === 'overview' && (\n            <OverviewResult\n                data={result.overview}\n                labelKey={report.labelKey}\n                descriptionKey={report.descriptionKey}\n                t={t}\n            />\n        )}\n\n        {!isLoading && result && result.kind === 'legacy' && (\n            <RawResult\n                result={result}\n                siteKey={siteKey}\n                language={language}\n                labelKey={report.labelKey}\n                descriptionKey={report.descriptionKey}\n                selectedReport={report}\n                t={t}\n            />\n        )}\n\n        {isLoading && (\n            <div className={styles.info}>{t('states.loading')}</div>\n        )}\n    </>\n);\n\nResultSection.propTypes = {\n    error: PropTypes.instanceOf(Error),\n    isLoading: PropTypes.bool.isRequired,\n    result: PropTypes.shape({\n        kind: PropTypes.string,\n        overview: PropTypes.object\n    }),\n    siteKey: PropTypes.string.isRequired,\n    language: PropTypes.string,\n    report: PropTypes.shape({\n        labelKey: PropTypes.string.isRequired,\n        descriptionKey: PropTypes.string\n    }).isRequired,\n    t: PropTypes.func.isRequired\n};\n\nconst AdminPanel = () => {\n    const {t} = useTranslation('contentReportReact');\n\n    const context = window.contextJsParameters || {};\n    const siteKey = context.siteKey || (context.site && context.site.key) || '';\n    const language = context.lang || context.language || '';\n    const baseContentPath = useMemo(() => (siteKey ? `/sites/${siteKey}` : ''), [siteKey]);\n    const graphqlEndpoint = `${context.contextPath || ''}/modules/graphql`;\n\n    const reports = useMemo(() => buildReportsConfig(), []);\n    const [selectedReportId, setSelectedReportId] = useState(reports[0]?.id);\n\n    const selectedReport = useMemo(\n        () => reports.find(report => report.id === selectedReportId) || reports[0],\n        [reports, selectedReportId]\n    );\n\n    const [fields, setFields] = useState(() => buildInitialFields(selectedReport, {siteKey, language}));\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [result, setResult] = useState(null);\n    const [lastUpdated, setLastUpdated] = useState(null);\n    const [siteLanguages, setSiteLanguages] = useState([]);\n\n    // Fetch site languages on mount\n    useEffect(() => {\n        const fetchSiteLanguages = async () => {\n            if (!siteKey) {\n                return;\n            }\n\n            try {\n                const data = await executeQuery(GET_SITE_LANGUAGES_QUERY, {siteKey: `/sites/${siteKey}`});\n                const languagesData = data?.jcr?.nodeByPath?.site?.languages || [];\n                const languages = languagesData.map(lang => lang.language);\n                console.log('Fetched site languages:', languages);\n                setSiteLanguages(languages);\n            } catch (err) {\n                console.error('Failed to fetch site languages:', err);\n                // Fallback: try to get from context\n                const contextLanguages = window.contextJsParameters?.siteLanguages || [];\n                console.log('Using fallback languages from context:', contextLanguages);\n                setSiteLanguages(contextLanguages);\n            }\n        };\n\n        fetchSiteLanguages();\n    }, [siteKey, executeQuery]);\n\n    useEffect(() => {\n        setFields(buildInitialFields(selectedReport, {siteKey, language}));\n        setResult(null);\n        setError(null);\n    }, [selectedReport, siteKey, language]);\n\n    const handleFieldChange = useCallback((name, value) => {\n        console.log('[AdminPanel] handleFieldChange - name:', name, 'value:', value);\n        setFields(prev => {\n            const newFields = {...prev, [name]: value};\n            console.log('[AdminPanel] handleFieldChange - new fields state:', newFields);\n            return newFields;\n        });\n    }, []);\n\n    const executeQuery = useCallback(async (query, variables) => {\n        const response = await axios.post(graphqlEndpoint, {query, variables}, {\n            headers: {'Content-Type': 'application/json'},\n            withCredentials: true\n        });\n\n        if (response.data && response.data.errors && response.data.errors.length) {\n            const message = response.data.errors.map(err => err.message).join('\\n');\n            throw new Error(message);\n        }\n\n        return response.data.data;\n    }, [graphqlEndpoint]);\n\n    const runOverview = useCallback(async () => {\n        setLoading(true);\n        setError(null);\n        try {\n            const data = await executeQuery(OVERVIEW_QUERY, {siteKey, language});\n            const overview = data?.admin?.contentReports?.overview;\n            setResult({kind: 'overview', overview});\n            setLastUpdated(new Date());\n        } catch (err) {\n            setError(err);\n        } finally {\n            setLoading(false);\n        }\n    }, [executeQuery, siteKey, language]);\n\n    const runLegacy = useCallback(async () => {\n        if (!selectedReport) {\n            return;\n        }\n\n        setLoading(true);\n        setError(null);\n        try {\n            const parameters = buildParameterPayload(fields, selectedReport.fields);\n\n            console.log('[AdminPanel] runLegacy - fields:', fields);\n            console.log('[AdminPanel] runLegacy - parameters:', parameters);\n\n            // Convert parameters array to individual name/value pairs (max 5 parameters supported)\n            const variables = {\n                siteKey,\n                language,\n                reportId: selectedReport.id,\n                offset: selectedReport.defaultOffset ?? 0,\n                limit: selectedReport.defaultLimit ?? 10000, // Fetch all results for client-side pagination\n                sortColumn: selectedReport.defaultSortColumn ?? null,\n                sortDirection: selectedReport.defaultSortDirection ?? null\n            };\n\n            // Add up to 6 parameters as individual fields\n            parameters.forEach((param, index) => {\n                if (index < 6) {\n                    variables[`parameterName${index + 1}`] = param.name;\n                    variables[`parameterValue${index + 1}`] = param.value;\n                }\n            });\n\n            console.log('[AdminPanel] runLegacy - GraphQL variables:', variables);\n\n            const data = await executeQuery(RAW_REPORT_QUERY, variables);\n            const payload = data?.admin?.contentReports?.rawReport;\n            const parsed = tryParseJSON(payload);\n            setResult({kind: 'legacy', payload, parsed});\n            setLastUpdated(new Date());\n        } catch (err) {\n            setError(err);\n        } finally {\n            setLoading(false);\n        }\n    }, [executeQuery, fields, language, selectedReport, siteKey]);\n\n    const handleSubmit = useCallback(event => {\n        event.preventDefault();\n        if (!selectedReport) {\n            return;\n        }\n\n        const validationError = validateFields(selectedReport.fields, fields, t);\n        if (validationError) {\n            setError(new Error(validationError));\n            return;\n        }\n\n        if (selectedReport.type === 'overview') {\n            runOverview();\n        } else {\n            runLegacy();\n        }\n    }, [fields, runLegacy, runOverview, selectedReport, t]);\n\n    useEffect(() => {\n        if (selectedReport && selectedReport.type === 'overview') {\n            runOverview();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [selectedReportId]);\n\n    const openPathPicker = useCallback((fieldName, currentValue) => {\n        const initialPath = currentValue || baseContentPath || '/';\n        const picker = window?.CE_API?.openPicker;\n\n        console.log('[AdminPanel] openPathPicker - fieldName:', fieldName, 'currentValue:', currentValue, 'initialPath:', initialPath);\n\n        if (picker) {\n            picker({\n                type: 'editorial',\n                initialSelectedItem: [initialPath],\n                site: window.jahiaGWTParameters?.siteKey || siteKey,\n                lang: window.jahiaGWTParameters?.uilang || language || 'en',\n                isMultiple: false,\n                setValue: ([selected]) => {\n                    console.log('[AdminPanel] Path picker returned:', selected);\n                    if (selected?.path) {\n                        console.log('[AdminPanel] Setting field', fieldName, 'to path:', selected.path);\n                        handleFieldChange(fieldName, selected.path);\n                    }\n                }\n            });\n            return;\n        }\n\n        console.warn('[contentReportReact] Content Editor picker API is not available.');\n    }, [baseContentPath, handleFieldChange, language, siteKey]);\n\n    const renderGenericField = useCallback(field => {\n        if (!field || !isFieldActive(field, fields)) {\n            return null;\n        }\n\n        if (field.type === 'checkbox') {\n            return (\n                <label key={field.name} className={styles.checkboxRow}>\n                    <input\n                        type=\"checkbox\"\n                        checked={Boolean(fields[field.name])}\n                        onChange={event => handleFieldChange(field.name, event.target.checked)}\n                    />\n                    <span>{t(field.labelKey)}</span>\n                </label>\n            );\n        }\n\n        if (field.type === 'radio') {\n            return (\n                <div key={field.name} className={styles.formRow}>\n                    <span className={styles.label}>{t(field.labelKey)}</span>\n                    {(field.options || []).map(option => (\n                        <label key={`${field.name}-${option.value}`} className={styles.inline}>\n                            <input\n                                type=\"radio\"\n                                name={field.name}\n                                value={option.value}\n                                checked={fields[field.name] === option.value}\n                                onChange={event => handleFieldChange(field.name, event.target.value)}\n                            />\n                            <span>{t(option.labelKey)}</span>\n                        </label>\n                    ))}\n                </div>\n            );\n        }\n\n        if (field.type === 'select' || field.type === 'languageSelect') {\n            const options = field.type === 'languageSelect' ?\n                siteLanguages.map(lang => ({value: lang, labelKey: lang})) :\n                (field.options || []);\n\n            return (\n                <div key={field.name} className={styles.formRow}>\n                    <label className={styles.label} htmlFor={field.name}>{t(field.labelKey)}</label>\n                    <select\n                        id={field.name}\n                        value={fields[field.name] ?? ''}\n                        className={styles.input}\n                        onChange={event => handleFieldChange(field.name, event.target.value)}\n                    >\n                        {options.map(option => (\n                            <option key={option.value} value={option.value}>\n                                {field.type === 'languageSelect' ? option.value : t(option.labelKey)}\n                            </option>\n                        ))}\n                    </select>\n                </div>\n            );\n        }\n\n        const isPathField = field.type === 'path';\n        const inputType = field.type === 'date' ? 'date' : 'text';\n        const placeholder = field.placeholderKey ? t(field.placeholderKey) : '';\n\n        return (\n            <div key={field.name} className={styles.formRow}>\n                <label className={styles.label} htmlFor={field.name}>{t(field.labelKey)}</label>\n                <div className={isPathField ? styles.inline : styles.inputRow}>\n                    <Input\n                        id={field.name}\n                        type={inputType}\n                        value={fields[field.name] ?? ''}\n                        size=\"big\"\n                        placeholder={placeholder}\n                        onChange={event => handleFieldChange(field.name, event.target.value)}\n                    />\n                    {isPathField && (\n                        <Button\n                            size=\"big\"\n                            variant=\"outlined\"\n                            label={t('actions.browse')}\n                            onClick={() => openPathPicker(field.name, fields[field.name])}\n                        />\n                    )}\n                </div>\n            </div>\n        );\n    }, [fields, handleFieldChange, openPathPicker, t, siteLanguages]);\n\n    const renderFormFields = () => {\n        if (!selectedReport || selectedReport.type === 'overview') {\n            return null;\n        }\n\n        // Direct component rendering for known components\n        if (selectedReport.component === 'ByAuthorAndDate') {\n            return (\n                <ByAuthorAndDate\n                    baseContentPath={baseContentPath}\n                    definitions={selectedReport.fields || []}\n                    fields={fields}\n                    t={t}\n                    onFieldChange={handleFieldChange}\n                    onOpenPathPicker={openPathPicker}\n                />\n            );\n        }\n\n        // Dynamic component resolution for other cases\n        if (selectedReport.component) {\n            const ReportComponent = resolveReportComponent(selectedReport.component);\n\n            if (ReportComponent && typeof ReportComponent === 'function') {\n                return React.createElement(ReportComponent, {\n                    baseContentPath,\n                    definitions: selectedReport.fields || [],\n                    fields,\n                    t,\n                    onFieldChange: handleFieldChange,\n                    onOpenPathPicker: openPathPicker\n                });\n            }\n        }\n\n        // Fallback to generic fields\n        const genericFields = selectedReport.fields?.map(renderGenericField) || null;\n        return genericFields ? (\n            <Paper style={{padding: '32px', borderRadius: '8px', boxShadow: '0 1px 3px rgba(0, 0, 0, 0.06), 0 1px 2px rgba(0, 0, 0, 0.04)', display: 'flex', flexDirection: 'column', gap: '28px'}}>\n                <div style={{paddingBottom: '20px', borderBottom: '1px solid #e8ecf0'}}>\n                    <Typography variant=\"heading\" weight=\"bold\" style={{fontSize: '20px', color: '#1a2332', marginBottom: '6px', lineHeight: '1.4'}}>\n                        {t(selectedReport.labelKey)}\n                    </Typography>\n                    {selectedReport.descriptionKey && (\n                        <Typography variant=\"body\" style={{color: '#5c6f90', fontSize: '14px', lineHeight: '1.6'}}>\n                            {t(selectedReport.descriptionKey)}\n                        </Typography>\n                    )}\n                </div>\n                {genericFields}\n            </Paper>\n        ) : null;\n    };\n\n    return (\n        <>\n            <Header\n                title={`${t('label')} ${siteKey ? `- ${siteKey}` : ''}`}\n            />\n            <LayoutContent\n                content={(\n                    <div className={styles.pageContainer}>\n                        <div className={styles.panelLayout}>\n                            <ReportMenu\n                                reports={reports}\n                                selectedReportId={selectedReportId}\n                                t={t}\n                                onSelectReport={setSelectedReportId}\n                            />\n                            <div className={styles.content}>\n                                {selectedReport?.type === 'overview' ? (\n                                    // For overview report: show result panel on top, button below\n                                    <>\n                                        {!loading && result && result.kind === 'overview' && (\n                                            <OverviewResult\n                                                data={result.overview}\n                                                labelKey={selectedReport.labelKey}\n                                                descriptionKey={selectedReport.descriptionKey}\n                                                t={t}\n                                            />\n                                        )}\n                                        <form className={styles.form} onSubmit={handleSubmit}>\n                                            <FormActions isLoading={loading} lastUpdated={lastUpdated} t={t}/>\n                                        </form>\n                                    </>\n                                ) : selectedReport ? (\n                                    <form className={styles.form} onSubmit={handleSubmit}>\n                                        {renderFormFields()}\n                                        <FormActions isLoading={loading} lastUpdated={lastUpdated} t={t}/>\n                                    </form>\n                                ) : (\n                                    <div className={styles.error}>\n                                        {t('errors.noReportSelected')}\n                                    </div>\n                                )}\n                            </div>\n                        </div>\n                        <div className={styles.fullWidthResults}>\n                            {selectedReport?.type !== 'overview' && (\n                                <ResultSection error={error} isLoading={loading} result={result} siteKey={siteKey} language={language} report={selectedReport} t={t}/>\n                            )}\n                        </div>\n                    </div>\n                )}\n            />\n        </>\n    );\n};\n\nAdminPanel.displayName = 'ContentReportAdminPanel';\n\nexport default AdminPanel;\n","import {registry} from '@jahia/ui-extender';\nimport {DEFAULT_ROUTE} from './AdminPanel.constants';\nimport AdminPanel from './AdminPanel';\nimport React, {Suspense} from 'react';\nimport DefaultEntry from '@jahia/moonstone/dist/icons/components/DefaultEntry';\n\nexport const registerRoutes = () => {\n    registry.add('adminRoute', 'contentReportReact', {\n        targets: ['jcontent:1'],\n        icon: <DefaultEntry/>,\n        label: 'contentReportReact:label',\n        path: `${DEFAULT_ROUTE}*`, // Catch everything and let the app handle routing logic\n        defaultPath: DEFAULT_ROUTE,\n        isSelectable: true,\n        render: v => <Suspense fallback=\"loading ...\"><AdminPanel match={v.match}/></Suspense>\n    });\n\n    console.debug('%c contentReportReact is activated', 'color: #3c8cba');\n};\n","import {registerRoutes} from './AdminPanel/AdminPanel.routes';\nimport i18next from 'i18next';\nimport en from '../main/resources/javascript/locales/en.json';\nimport fr from '../main/resources/javascript/locales/fr.json';\n\nconst registerResources = () => {\n    const bundles = [\n        ['en', en],\n        ['fr', fr]\n    ];\n\n    bundles.forEach(([lang, resource]) => {\n        const namespaceData = resource.contentReportReact || resource;\n        if (namespaceData && !i18next.hasResourceBundle(lang, 'contentReportReact')) {\n            i18next.addResourceBundle(lang, 'contentReportReact', namespaceData, true, true);\n        }\n    });\n};\n\nexport default async function () {\n    registerResources();\n    await i18next.loadNamespaces('contentReportReact');\n    registerRoutes();\n}\n","import {registry} from '@jahia/ui-extender';\nimport register from './AdminPanel.register';\n\nexport default function () {\n    registry.add('callback', 'contentReportReact', {\n        targets: ['jahiaApp-init:2'],\n        callback: register\n    });\n}\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"._3kY-t_XqXF4Pr38uLeJZ67{display:flex;flex-direction:column;min-height:100%}._2mCcJA35FvgooxkkLQFRuw{display:flex;gap:24px;padding:24px}._2QL3Qkxh5iTYDmhH9oDdZk{min-width:300px;max-width:300px;flex-shrink:0;overflow:hidden}._1ip2h9xUhrgwjszEAnRFGr{overflow-y:auto}._1ip2h9xUhrgwjszEAnRFGr .moonstone-accordion{display:flex;flex-direction:column;gap:4px}._1ip2h9xUhrgwjszEAnRFGr .moonstone-accordion-item{border:none;background:rgba(0,0,0,0);margin:0}._1ip2h9xUhrgwjszEAnRFGr .moonstone-accordion-item:not(:last-child){border-bottom:1px solid #e8ecf0}._1ip2h9xUhrgwjszEAnRFGr .moonstone-accordion-item-header{padding:12px 20px;background:rgba(0,0,0,0);border:none;font-weight:600;font-size:13px;color:#2c3e5d;letter-spacing:.3px;text-transform:uppercase;transition:background-color .2s ease,color .2s ease}._1ip2h9xUhrgwjszEAnRFGr .moonstone-accordion-item-header:hover{background-color:rgba(0,160,227,.05);color:#00a0e3}._1ip2h9xUhrgwjszEAnRFGr .moonstone-accordion-item-header[aria-expanded=true]{background-color:rgba(0,160,227,.08);color:#00a0e3}._1ip2h9xUhrgwjszEAnRFGr .moonstone-accordion-item-content{padding:8px 0 12px 0;background:rgba(0,0,0,0)}._1ip2h9xUhrgwjszEAnRFGr .moonstone-accordion-item-icon{color:#5c6f90;transition:transform .2s ease}._1ip2h9xUhrgwjszEAnRFGr .moonstone-accordion-item-header[aria-expanded=true] .moonstone-accordion-item-icon{color:#00a0e3}._2sm-GqnwQtvZBCa6G_g1EG{display:flex;flex-direction:column;padding:0;gap:2px}._1woktupzhpWqXbCyOHqmE0{display:block;width:100%;text-align:left;padding:10px 20px 10px 32px;margin:0;border:none;border-radius:0;cursor:pointer;background-color:rgba(0,0,0,0);color:#3e5471;font-weight:400;font-size:14px;transition:all .2s ease;position:relative}._1woktupzhpWqXbCyOHqmE0::before{content:\\\"\\\";position:absolute;left:0;top:0;bottom:0;width:3px;background-color:rgba(0,0,0,0);transition:background-color .2s ease}._1woktupzhpWqXbCyOHqmE0:hover{background-color:rgba(0,160,227,.06);color:#00a0e3;padding-left:34px}._1woktupzhpWqXbCyOHqmE0:first-child{margin-top:0}.Rnu6c1M4aCByZjgzdKuy8{background-color:rgba(0,160,227,.12);color:#00a0e3;font-weight:600;padding-left:34px}.Rnu6c1M4aCByZjgzdKuy8::before{background-color:#00a0e3}.Rnu6c1M4aCByZjgzdKuy8:hover{background-color:rgba(0,160,227,.16)}.VsHWyAuijOv0uOrE4JanI{flex:1;display:flex;flex-direction:column;gap:24px;min-width:0}.yQ7Om36FU-jOK8uGul9XH{width:100%;padding:0 24px 24px 24px}._1BYDrcozrIdv8wfGSIxAAm{display:flex;flex-direction:column;gap:16px}._3OzsgcThE15JXXqEhL4_7m{display:flex;align-items:center;gap:12px;margin-top:12px}.O3ysIPAYeqeZ935kVTzJt{padding:8px 18px;border-radius:4px;border:none;background-color:#00a0e3;color:#fff;cursor:pointer;font-weight:600}.O3ysIPAYeqeZ935kVTzJt:disabled{opacity:.6;cursor:wait}._38UnWkQp5DfxrUpZU6Xtic{margin-top:16px;padding:12px;border-radius:4px;background-color:#eef5ff;color:#1b335d}._2hI6uuWBmgHYCtV6UzYvB5{margin-top:16px;padding:12px;border-radius:4px;background-color:#fdecea;color:#a02824}._35zAcIE9Avyj9e2xsxLyeX{margin-top:20px;overflow-x:auto}._1g12L4jZzzIAkz8tCX-wMr{width:100%;border-collapse:collapse;font-size:14px}._1g12L4jZzzIAkz8tCX-wMr th{text-align:left;padding:8px;border-bottom:1px solid #dbe3f3;background-color:#f2f5fb}._1g12L4jZzzIAkz8tCX-wMr td{padding:8px;border-bottom:1px solid #eef2fb;vertical-align:top}.yapoQwoVkt-jeuZSuzOPA{margin-top:18px;background-color:#0f172a;color:#f8fafc;padding:16px;border-radius:6px;overflow-x:auto;font-family:monospace;font-size:13px}._3DoYI074DwxmCboPrSoJW7{display:flex;flex-direction:column;gap:24px}.mLxyTuT1TUvGdTV2CxUdS{display:flex;flex-direction:column;gap:12px}.TBpbDYrzhrb7mJr5zw9OS{display:flex;flex-wrap:wrap;align-items:center;gap:12px}._3aRSOcDHAJnrC5ejCGpBBn{display:flex;align-items:center;gap:8px}._28EkzrTpgZMkP_1giw6Inw{display:flex;align-items:center;gap:12px;flex-wrap:wrap}.X3A3IsmuSsanERHkSCisA{color:#5c6f90;font-size:12px}._3W_47XulmLGy3hcLhwht5X{display:flex;flex-direction:column;gap:8px}._2rCZoencufjvfQLVS4RmUL{color:#12264d;font-size:14px;font-weight:600}._1BFoWKT4ZNIiHMKm0ZpjKw{display:flex;align-items:center;gap:12px}._3p4JmYDzKvd3VUiuUHhSJS{display:flex;gap:12px}.X3ENZgRgBlq_pBQFQChzG{flex:1;padding:8px 10px;border:1px solid #dbe3f3;border-radius:4px;font-size:14px}._1dU-8sZ1T3VW7Wd9i949v{padding:8px 18px;border-radius:4px;border:1px solid #b0bfdc;background-color:#fff;color:#036;cursor:pointer;font-weight:600}\", \"\"]);\n// Exports\nexports.locals = {\n\t\"pageContainer\": \"_3kY-t_XqXF4Pr38uLeJZ67\",\n\t\"panelLayout\": \"_2mCcJA35FvgooxkkLQFRuw\",\n\t\"menuPaper\": \"_2QL3Qkxh5iTYDmhH9oDdZk\",\n\t\"menu\": \"_1ip2h9xUhrgwjszEAnRFGr\",\n\t\"categoryReports\": \"_2sm-GqnwQtvZBCa6G_g1EG\",\n\t\"menuButton\": \"_1woktupzhpWqXbCyOHqmE0\",\n\t\"menuButtonActive\": \"Rnu6c1M4aCByZjgzdKuy8\",\n\t\"content\": \"VsHWyAuijOv0uOrE4JanI\",\n\t\"fullWidthResults\": \"yQ7Om36FU-jOK8uGul9XH\",\n\t\"form\": \"_1BYDrcozrIdv8wfGSIxAAm\",\n\t\"actions\": \"_3OzsgcThE15JXXqEhL4_7m\",\n\t\"buttonPrimary\": \"O3ysIPAYeqeZ935kVTzJt\",\n\t\"info\": \"_38UnWkQp5DfxrUpZU6Xtic\",\n\t\"error\": \"_2hI6uuWBmgHYCtV6UzYvB5\",\n\t\"tableWrapper\": \"_35zAcIE9Avyj9e2xsxLyeX\",\n\t\"table\": \"_1g12L4jZzzIAkz8tCX-wMr\",\n\t\"jsonBlock\": \"yapoQwoVkt-jeuZSuzOPA\",\n\t\"sectionCard\": \"_3DoYI074DwxmCboPrSoJW7\",\n\t\"fieldGroup\": \"mLxyTuT1TUvGdTV2CxUdS\",\n\t\"inlineFields\": \"TBpbDYrzhrb7mJr5zw9OS\",\n\t\"checkboxRow\": \"_3aRSOcDHAJnrC5ejCGpBBn\",\n\t\"pathRow\": \"_28EkzrTpgZMkP_1giw6Inw\",\n\t\"helperText\": \"X3A3IsmuSsanERHkSCisA\",\n\t\"formRow\": \"_3W_47XulmLGy3hcLhwht5X\",\n\t\"label\": \"_2rCZoencufjvfQLVS4RmUL\",\n\t\"inline\": \"_1BFoWKT4ZNIiHMKm0ZpjKw\",\n\t\"inputRow\": \"_3p4JmYDzKvd3VUiuUHhSJS\",\n\t\"input\": \"X3ENZgRgBlq_pBQFQChzG\",\n\t\"browseButton\": \"_1dU-8sZ1T3VW7Wd9i949v\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"._2UbyuopyM1ydA99Ls70Xmm{display:flex;flex-direction:column;gap:24px}._3v1pIhxKWWLoO6UaP5ExQH{display:flex;flex-direction:column;gap:8px}._1sp2CKC3Y609LQ-HZLlbrX{display:flex;flex-direction:column;gap:8px}.E2k46T9fs-Vy2gFwYwVsS{display:flex;align-items:center;gap:8px}.-GuKwADS1rITqz6nJmg2d{display:flex;align-items:center;gap:8px}.RIlMtlve0ocrOZoy-LhKB{display:flex;flex-wrap:wrap;align-items:center;gap:12px}._1n5w--MxyCJoF69-NTYqww{display:flex;align-items:center;gap:12px;flex-wrap:wrap}._1_ypKOEjWff0BgTLomuBfi{color:#5c6f90;font-size:12px}._2KLhoGZPOaga_w1P6TS9-b{flex:1 1 260px;min-width:200px}\", \"\"]);\n// Exports\nexports.locals = {\n\t\"sectionCard\": \"_2UbyuopyM1ydA99Ls70Xmm\",\n\t\"fieldGroup\": \"_3v1pIhxKWWLoO6UaP5ExQH\",\n\t\"radioGroup\": \"_1sp2CKC3Y609LQ-HZLlbrX\",\n\t\"radioOption\": \"E2k46T9fs-Vy2gFwYwVsS\",\n\t\"checkboxRow\": \"-GuKwADS1rITqz6nJmg2d\",\n\t\"inlineFields\": \"RIlMtlve0ocrOZoy-LhKB\",\n\t\"pathRow\": \"_1n5w--MxyCJoF69-NTYqww\",\n\t\"helperText\": \"_1_ypKOEjWff0BgTLomuBfi\",\n\t\"growInput\": \"_2KLhoGZPOaga_w1P6TS9-b\"\n};\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"._3T4SeV8dRe4sLrCk7enCHZ{margin-top:24px}._3T4SeV8dRe4sLrCk7enCHZ .moonstone-table{table-layout:auto !important}._3T4SeV8dRe4sLrCk7enCHZ .moonstone-table-row{height:auto !important;min-height:48px !important}._3T4SeV8dRe4sLrCk7enCHZ .moonstone-table-body-cell{height:auto !important;min-height:48px !important;vertical-align:middle !important;padding:12px 16px !important}._1iLKY5zzRFR4vMuXBxyfM{display:flex;justify-content:space-between;align-items:center;margin-bottom:16px}._26_auEIyi7GwSjEAuPV0_r{display:flex;gap:8px}._3YNdjbZ-8ohCz57Vxufjg2{width:100%;table-layout:auto}._3YNdjbZ-8ohCz57Vxufjg2 td,._3YNdjbZ-8ohCz57Vxufjg2 th{word-wrap:break-word;overflow-wrap:break-word}._3YNdjbZ-8ohCz57Vxufjg2 tr{height:auto !important;min-height:48px !important}._3YNdjbZ-8ohCz57Vxufjg2 tbody td{vertical-align:middle;height:auto !important;min-height:48px !important;padding:12px 16px}._30Jkq25qEknF0ryHMis9Ik{cursor:pointer;user-select:none;transition:background-color .2s ease}._30Jkq25qEknF0ryHMis9Ik:hover{background-color:rgba(0,0,0,.04)}._29ogfKB1NXHVT9s-cBZgZ8{display:flex;align-items:center;gap:8px;justify-content:space-between;width:100%}.kbY_yys5Ugdxg_l0189Ul{font-size:10px;color:#5c6f90;margin-left:4px}._2oRu1g4Q7dDx4ra-ymivbC{font-weight:500;max-width:300px;word-break:break-word}._6-QOjGUq2fzN-9qlqOF4h{font-family:monospace;font-size:12px;word-break:break-word;overflow-wrap:break-word;white-space:normal}._3lqiXKFNqxgPoZcy9JX-fZ{color:var(--color-primary, #007bff);text-decoration:none}._3lqiXKFNqxgPoZcy9JX-fZ:hover{text-decoration:underline}._3Iix5sTefMMTUeKZwrvjA3{white-space:nowrap;font-size:12px}._2WbpVZqoLkbAhMEMc0SoK0{text-align:center;font-size:16px}._13vU92D_eZ28JTCEN-gzWw{text-align:center;font-size:18px}._2pSSedIVHghswCTzVNHhlR{color:#22863a;font-weight:bold;font-size:20px}._38z8r1IQDRciSVE9EON1ZT{color:#d73a49;font-weight:bold;font-size:20px}._2m0nqA7zejTdYd2bQiLSIi{white-space:normal !important;word-break:break-word;overflow-wrap:break-word;max-width:none;min-width:200px;min-height:48px;vertical-align:middle !important;height:auto !important;padding:12px 16px !important}._2m0nqA7zejTdYd2bQiLSIi span{display:block;white-space:normal !important;word-wrap:break-word;overflow-wrap:break-word}._27Tw1A6sp_ey8NOVdjSSvc{padding:32px;text-align:center;color:var(--color-text-secondary, #999)}\", \"\"]);\n// Exports\nexports.locals = {\n\t\"tableContainer\": \"_3T4SeV8dRe4sLrCk7enCHZ\",\n\t\"resultsHeader\": \"_1iLKY5zzRFR4vMuXBxyfM\",\n\t\"exportButtons\": \"_26_auEIyi7GwSjEAuPV0_r\",\n\t\"table\": \"_3YNdjbZ-8ohCz57Vxufjg2\",\n\t\"sortableHeader\": \"_30Jkq25qEknF0ryHMis9Ik\",\n\t\"headerContent\": \"_29ogfKB1NXHVT9s-cBZgZ8\",\n\t\"sortIcon\": \"kbY_yys5Ugdxg_l0189Ul\",\n\t\"titleCell\": \"_2oRu1g4Q7dDx4ra-ymivbC\",\n\t\"pathCell\": \"_6-QOjGUq2fzN-9qlqOF4h\",\n\t\"pathLink\": \"_3lqiXKFNqxgPoZcy9JX-fZ\",\n\t\"dateCell\": \"_3Iix5sTefMMTUeKZwrvjA3\",\n\t\"lockCell\": \"_2WbpVZqoLkbAhMEMc0SoK0\",\n\t\"booleanCell\": \"_13vU92D_eZ28JTCEN-gzWw\",\n\t\"booleanTrue\": \"_2pSSedIVHghswCTzVNHhlR\",\n\t\"booleanFalse\": \"_38z8r1IQDRciSVE9EON1ZT\",\n\t\"htmlCell\": \"_2m0nqA7zejTdYd2bQiLSIi\",\n\t\"noResults\": \"_27Tw1A6sp_ey8NOVdjSSvc\"\n};\nmodule.exports = exports;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../node_modules/sass-loader/dist/cjs.js!./global.module.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};"],"names":["api","content","__esModule","default","module","id","options","exports","locals","DEFAULT_ROUTE","PATH_DEFAULT","_ref","siteKey","concat","reportCategories","labelKey","typeSearchOptions","value","typeAuthorOptions","reports","descriptionKey","type","category","fields","component","name","defaultValue","required","includeIfEmpty","placeholderKey","dependsOn","dependsValue","uiOnly","columns","key","sortable","_ref2","language","_ref3","noWrap","buildReportsConfig","map","report","_objectSpread","pathDefault","Fieldset","label","children","style","React","className","globalStyles","Typography","variant","weight","htmlFor","fontSize","marginBottom","display","color","propTypes","PropTypes","ByAuthorAndDate","definitions","onFieldChange","onOpenPathPicker","t","baseContentPath","_useState","useState","_useState2","_slicedToArray","users","setUsers","_useState3","_useState4","loadingUsers","setLoadingUsers","getDefinition","useCallback","find","field","typeSearchField","typeDateField","typeAuthorSearchField","useEffect","fetchUsers","_asyncToGenerator","_regeneratorRuntime","_callee","_response$data","response","rawUsers","userList","_t","_context","prev","next","axios","window","contextJsParameters","contextPath","query","headers","sent","data","jcr","nodesByQuery","nodes","user","_user$property","username","email","property","console","error","finish","stop","apply","arguments","renderRadioList","groupName","optionList","option","checked","onChange","event","target","Paper","hasPadding","paddingBottom","borderBottom","Input","pathTxt","size","Button","onClick","Checkbox","Boolean","searchByDate","marginTop","flex","dateBegin","width","dateEnd","searchAuthor","searchUsername","disabled","height","padding","border","borderRadius","backgroundColor","cursor","isRequired","formatDate","dateString","date","Date","Intl","DateTimeFormat","year","month","day","hour","minute","format","_unused","renderBooleanValue","isFalse","styles","buildJContentUrl","path","_window$contextJsPara","baseUrl","cleanPath","replace","startsWith","substring","TableHeaders","useCustomColumns","sortColumn","sortDirection","handleSort","siteLanguages","column","index","headerLabel","isLanguage","languageIndex","TableHeadCell","undefined","ReportResultsTable","reportId","reportType","useTranslation","currentPage","setCurrentPage","rowsPerPage","setRowsPerPage","_useState5","_useState6","setSortColumn","_useState7","_useState8","setSortDirection","log","useMemo","dynamicColumns","length","firstRow","cols","i","push","effectiveColumns","renderCellValue","columnType","rowData","columnKey","dangerouslySetInnerHTML","__html","jcontentUrl","href","rel","compareValues","aVal","bVal","columnIndex","aDate","bDate","aNum","bNum","aStr","String","toLowerCase","bStr","localeCompare","sortedData","Array","isArray","_toConsumableArray","sort","a","b","paginatedData","startIndex","slice","recordsTotal","icon","Download","csvContent","col","join","row","cell","cellStr","includes","blob","Blob","link","document","createElement","URL","createObjectURL","download","getTime","click","revokeObjectURL","exportDataToCSV","jsonContent","JSON","stringify","exportDataToJSON","Table","TableHead","TableRow","TableBody","rowIndex","rowKey","colIndex","cellValue","cellClassName","TableBodyCell","TablePagination","totalNumberOfRows","rowsPerPageOptions","of","onPageChange","onRowsPerPageChange","recordsFiltered","REPORT_COMPONENTS","overviewStyles","grid","gridTemplateColumns","gap","card","background","boxShadow","fontWeight","buildInitialFields","context","reduce","acc","isFieldActive","values","dependencyValue","buildParameterPayload","entries","forEach","trim","tryParseJSON","parsed","parse","items","item","title","totalContent","_","OverviewResult","_data$averageTimeToPu","metrics","nbPages","nbTemplates","nbUsers","nbContents","nbEditorialContents","nbWorkflowTasks","nbFiles","nbImages","lineHeight","siteDisplayableName","siteName","languages","gridColumn","nbLanguages","flexWrap","lang","alignItems","en","fr","de","es","it","pt","nl","ru","ja","zh","ar","ko","pl","tr","sv","da","no","fi","cs","el","toUpperCase","paddingTop","borderTop","newContentLast30Days","modifiedContentLast30Days","publishedContentLast30Days","publishedNodes","unpublishedNodes","averageTimeToPublish","toFixed","topContributors","flexDirection","contributor","justifyContent","contentCount","fontStyle","RawResult","result","selectedReport","payload","ReportMenu","selectedReportId","onSelectReport","openedCategory","setOpenedCategory","reportsByCategory","grouped","cat","Accordion","openedItem","onSetOpenedItem","categoryReports","AccordionItem","isActive","buttonClassName","FormActions","_ref4","isLoading","lastUpdated","toLocaleString","ResultSection","_ref5","message","kind","overview","Error","AdminPanel","_reports$","site","graphqlEndpoint","setSelectedReportId","setFields","loading","setLoading","_useState9","_useState0","setError","_useState1","_useState10","setResult","_useState11","_useState12","setLastUpdated","_useState13","_useState14","setSiteLanguages","fetchSiteLanguages","_ref6","_data$jcr","languagesData","contextLanguages","abrupt","executeQuery","nodeByPath","handleFieldChange","newFields","_defineProperty","_ref7","_callee2","variables","_context2","withCredentials","errors","err","_x","_x2","runOverview","_callee3","_data$admin","_t2","_context3","admin","contentReports","runLegacy","_callee4","_selectedReport$defau","_selectedReport$defau2","_selectedReport$defau3","_selectedReport$defau4","_data$admin2","parameters","_t3","_context4","offset","defaultOffset","limit","defaultLimit","defaultSortColumn","defaultSortDirection","param","rawReport","handleSubmit","preventDefault","validationError","_step","_iterator","_createForOfIteratorHelper","s","n","done","requiredWhen","e","f","validateFields","openPathPicker","fieldName","currentValue","_window","_window$jahiaGWTParam","_window$jahiaGWTParam2","initialPath","picker","CE_API","openPicker","initialSelectedItem","jahiaGWTParameters","uilang","isMultiple","setValue","_ref0","selected","warn","renderGenericField","_fields$field$name2","_fields$field$name","isPathField","inputType","placeholder","Header","LayoutContent","onSubmit","_selectedReport$field","ReportComponent","componentName","normalizedName","componentEntry","_typeof","resolveReportComponent","genericFields","renderFormFields","displayName","registerRoutes","registry","add","targets","DefaultEntry","defaultPath","isSelectable","render","v","Suspense","fallback","match","debug","registerResources","resource","namespaceData","contentReportReact","i18next","callback","register","___CSS_LOADER_API_IMPORT___"],"sourceRoot":""}